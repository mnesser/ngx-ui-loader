{"version":3,"file":"ngx-ui-loader.js.map","sources":["ng://ngx-ui-loader/lib/core/ngx-ui-loader.enums.ts","ng://ngx-ui-loader/lib/core/ngx-ui-loader.contants.ts","ng://ngx-ui-loader/lib/core/ngx-ui-loader-config.token.ts","ng://ngx-ui-loader/lib/core/ngx-ui-loader.service.ts","ng://ngx-ui-loader/lib/core/coercion.ts","ng://ngx-ui-loader/lib/core/ngx-ui-loader.component.ts","ng://ngx-ui-loader/lib/core/ngx-ui-loader-blurred.directive.ts","ng://ngx-ui-loader/lib/core/ngx-ui-loader.module.ts","ng://ngx-ui-loader/lib/router/ngx-ui-loader-router-config.token.ts","ng://ngx-ui-loader/lib/router/ngx-ui-loader-router.constants.ts","ng://ngx-ui-loader/lib/router/ngx-ui-loader-router.module.ts","ng://ngx-ui-loader/lib/http/ngx-ui-loader-http-config.token.ts","ng://ngx-ui-loader/lib/http/ngx-ui-loader-http.constants.ts","ng://ngx-ui-loader/lib/http/ngx-ui-loader-http.interceptor.ts","ng://ngx-ui-loader/lib/http/ngx-ui-loader-http.module.ts"],"sourcesContent":["/**\r\n * Available spinner types\r\n */\r\nexport enum SPINNER {\r\n  ballScaleMultiple = 'ball-scale-multiple',\r\n  ballSpin = 'ball-spin',\r\n  ballSpinClockwise = 'ball-spin-clockwise',\r\n  ballSpinClockwiseFadeRotating = 'ball-spin-clockwise-fade-rotating',\r\n  ballSpinFadeRotating = 'ball-spin-fade-rotating',\r\n  chasingDots = 'chasing-dots',\r\n  circle = 'circle',\r\n  cubeGrid = 'cube-grid',\r\n  doubleBounce = 'double-bounce',\r\n  fadingCircle = 'fading-circle',\r\n  foldingCube = 'folding-cube',\r\n  pulse = 'pulse',\r\n  rectangleBounce = 'rectangle-bounce',\r\n  rectangleBounceParty = 'rectangle-bounce-party',\r\n  rectangleBouncePulseOut = 'rectangle-bounce-pulse-out',\r\n  rectangleBouncePulseOutRapid = 'rectangle-bounce-pulse-out-rapid',\r\n  rotatingPlane = 'rotating-plane',\r\n  squareJellyBox = 'square-jelly-box',\r\n  squareLoader = 'square-loader',\r\n  threeBounce = 'three-bounce',\r\n  threeStrings = 'three-strings',\r\n  wanderingCubes = 'wandering-cubes',\r\n}\r\n\r\n/**\r\n * Available postions\r\n */\r\nexport enum POSITION {\r\n  bottomCenter = 'bottom-center',\r\n  bottomLeft = 'bottom-left',\r\n  bottomRight = 'bottom-right',\r\n  centerCenter = 'center-center',\r\n  centerLeft = 'center-left',\r\n  centerRight = 'center-right',\r\n  topCenter = 'top-center',\r\n  topLeft = 'top-left',\r\n  topRight = 'top-right'\r\n}\r\n\r\n/**\r\n * Progress bar directions\r\n */\r\nexport enum PB_DIRECTION {\r\n  leftToRight = 'ltr',\r\n  rightToLeft = 'rtl'\r\n}\r\n","import { NgxUiLoaderConfig } from './ngx-ui-loader-config';\r\nimport { POSITION, PB_DIRECTION, SPINNER } from './ngx-ui-loader.enums';\r\n\r\n/**\r\n * The default value of task id\r\n */\r\nexport const DEFAULT_TASK_ID = 'default';\r\n\r\n/**\r\n * The default value of loader id\r\n */\r\nexport const DEFAULT_MASTER_LOADER_ID = 'master';\r\n\r\nexport const CLOSING_TIME = 501;\r\n\r\nexport const WAITING_FOR_OVERLAY_DISAPPEAR = 200;\r\n\r\n/**\r\n * The configuration of spinners\r\n */\r\nexport const SPINNER_CONFIG = {\r\n  'ball-scale-multiple': {\r\n    divs: 3,\r\n    class: 'sk-ball-scale-multiple'\r\n  },\r\n  'ball-spin': {\r\n    divs: 8,\r\n    class: 'sk-ball-spin'\r\n  },\r\n  'ball-spin-clockwise': {\r\n    divs: 8,\r\n    class: 'sk-ball-spin-clockwise'\r\n  },\r\n  'ball-spin-clockwise-fade-rotating': {\r\n    divs: 8,\r\n    class: 'sk-ball-spin-clockwise-fade-rotating'\r\n  },\r\n  'ball-spin-fade-rotating': {\r\n    divs: 8,\r\n    class: 'sk-ball-spin-fade-rotating'\r\n  },\r\n  'chasing-dots': {\r\n    divs: 2,\r\n    class: 'sk-chasing-dots'\r\n  },\r\n  'circle': {\r\n    divs: 12,\r\n    class: 'sk-circle'\r\n  },\r\n  'cube-grid': {\r\n    divs: 9,\r\n    class: 'sk-cube-grid'\r\n  },\r\n  'double-bounce': {\r\n    divs: 2,\r\n    class: 'sk-double-bounce'\r\n  },\r\n  'fading-circle': {\r\n    divs: 12,\r\n    class: 'sk-fading-circle'\r\n  },\r\n  'folding-cube': {\r\n    divs: 4,\r\n    class: 'sk-folding-cube'\r\n  },\r\n  'pulse':  {\r\n    divs: 1,\r\n    class: 'sk-pulse'\r\n  },\r\n  'rectangle-bounce': {\r\n    divs: 5,\r\n    class: 'sk-rectangle-bounce'\r\n  },\r\n  'rectangle-bounce-party': {\r\n    divs: 5,\r\n    class: 'sk-rectangle-bounce-party'\r\n  },\r\n  'rectangle-bounce-pulse-out': {\r\n    divs: 5,\r\n    class: 'sk-rectangle-bounce-pulse-out'\r\n  },\r\n  'rectangle-bounce-pulse-out-rapid': {\r\n    divs: 5,\r\n    class: 'sk-rectangle-bounce-pulse-out-rapid'\r\n  },\r\n  'rotating-plane': {\r\n    divs: 1,\r\n    class: 'sk-rotating-plane'\r\n  },\r\n  'square-jelly-box': {\r\n    divs: 2,\r\n    class: 'sk-square-jelly-box'\r\n  },\r\n  'square-loader': {\r\n    divs: 1,\r\n    class: 'sk-square-loader'\r\n  },\r\n  'three-bounce': {\r\n    divs: 3,\r\n    class: 'sk-three-bounce'\r\n  },\r\n  'three-strings': {\r\n    divs: 3,\r\n    class: 'sk-three-strings'\r\n  },\r\n  'wandering-cubes': {\r\n    divs: 2,\r\n    class: 'sk-wandering-cubes'\r\n  },\r\n};\r\n\r\n/**\r\n * The default configuration of ngx-ui-loader\r\n */\r\nexport const DEFAULT_CONFIG: NgxUiLoaderConfig = {\r\n  bgsColor: '#00ACC1',\r\n  bgsOpacity: 0.5,\r\n  bgsPosition: POSITION.bottomRight,\r\n  bgsSize: 60,\r\n  bgsType: SPINNER.ballSpinClockwise,\r\n  blur: 5,\r\n  fgsColor: '#00ACC1',\r\n  fgsPosition: POSITION.centerCenter,\r\n  fgsSize: 60,\r\n  fgsType: SPINNER.ballSpinClockwise,\r\n  gap: 24,\r\n  logoPosition: POSITION.centerCenter,\r\n  logoSize: 120,\r\n  logoUrl: '',\r\n  masterLoaderId: DEFAULT_MASTER_LOADER_ID,\r\n  overlayBorderRadius: '0',\r\n  overlayColor: 'rgba(40, 40, 40, 0.8)',\r\n  pbColor: '#00ACC1',\r\n  pbDirection: PB_DIRECTION.leftToRight,\r\n  pbThickness: 3,\r\n  hasProgressBar: true,\r\n  text: '',\r\n  textColor: '#FFFFFF',\r\n  textPosition: POSITION.centerCenter,\r\n  threshold: 500\r\n};\r\n","import { InjectionToken } from '@angular/core';\r\nimport { NgxUiLoaderConfig } from './ngx-ui-loader-config';\r\n\r\n/**\r\n * Injection token for ngx-ui-loader configuration\r\n */\r\nexport const NGX_UI_LOADER_CONFIG_TOKEN = new InjectionToken<NgxUiLoaderConfig>('ngxUiLoaderCustom.config');\r\n","import { Inject, Injectable, Optional } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\n\r\nimport { CLOSING_TIME, DEFAULT_TASK_ID, DEFAULT_CONFIG, WAITING_FOR_OVERLAY_DISAPPEAR } from './ngx-ui-loader.contants';\r\nimport { NGX_UI_LOADER_CONFIG_TOKEN } from './ngx-ui-loader-config.token';\r\nimport { NgxUiLoaderConfig } from './ngx-ui-loader-config';\r\nimport { Loaders, Loader, ShowEvent, Task } from './ngx-ui-loader.interfaces';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NgxUiLoaderService {\r\n\r\n  // Public properties\r\n\r\n  /**\r\n   * For internal use only. It may be changed in the future.\r\n   * @docs-private\r\n   */\r\n  backgroundClosing$: Observable<ShowEvent>;\r\n\r\n  /**\r\n   * For internal use only. It may be changed in the future.\r\n   * @docs-private\r\n   */\r\n  foregroundClosing$: Observable<ShowEvent>;\r\n\r\n  /**\r\n   * For internal use only. It may be changed in the future.\r\n   * @docs-private\r\n   */\r\n  showBackground$: Observable<ShowEvent>;\r\n\r\n  /**\r\n   * For internal use only. It may be changed in the future.\r\n   * @docs-private\r\n   */\r\n  showForeground$: Observable<ShowEvent>;\r\n\r\n  // Private properties\r\n  private bgClosing: BehaviorSubject<ShowEvent>;\r\n  private defaultConfig: NgxUiLoaderConfig;\r\n  private fgClosing: BehaviorSubject<ShowEvent>;\r\n  private loaders: Loaders;\r\n  private showBackground: BehaviorSubject<ShowEvent>;\r\n  private showForeground: BehaviorSubject<ShowEvent>;\r\n\r\n  /**\r\n   * Constructor\r\n   * @param config\r\n   */\r\n  constructor(@Optional() @Inject(NGX_UI_LOADER_CONFIG_TOKEN) private config: NgxUiLoaderConfig) {\r\n\r\n    this.defaultConfig = { ...DEFAULT_CONFIG };\r\n\r\n    if (this.config) {\r\n      if (this.config.threshold && this.config.threshold <= 0) {\r\n        this.config.threshold = DEFAULT_CONFIG.threshold;\r\n      }\r\n      this.defaultConfig = { ...this.defaultConfig, ...this.config };\r\n    }\r\n\r\n    this.loaders = {};\r\n    this.showForeground = new BehaviorSubject<ShowEvent>({ loaderId: '', isShow: false });\r\n    this.showForeground$ = this.showForeground.asObservable();\r\n    this.showBackground = new BehaviorSubject<ShowEvent>({ loaderId: '', isShow: false });\r\n    this.showBackground$ = this.showBackground.asObservable();\r\n    this.fgClosing = new BehaviorSubject<ShowEvent>({ loaderId: '', isShow: false });\r\n    this.foregroundClosing$ = this.fgClosing.asObservable();\r\n    this.bgClosing = new BehaviorSubject<ShowEvent>({ loaderId: '', isShow: false });\r\n    this.backgroundClosing$ = this.bgClosing.asObservable();\r\n  }\r\n\r\n  /**\r\n   * For internal use only. It may be changed in the future.\r\n   * @docs-private\r\n   */\r\n  initLoaderData(loaderId: string): void {\r\n    let isMaster = false;\r\n    if (loaderId === this.defaultConfig.masterLoaderId) {\r\n      this.throwErrorIfMasterLoaderExists(true);\r\n      isMaster = true;\r\n    } else { // not master loader\r\n      this.throwErrorIfLoaderExists(loaderId, true);\r\n    }\r\n    if (this.loaders[loaderId]) {\r\n      this.loaders[loaderId].isBound = true;\r\n      this.loaders[loaderId].isMaster = isMaster;\r\n      // emit showEvent after data loader is bound\r\n      if (this.hasForeground(loaderId)) {\r\n        this.showForeground.next({ loaderId, isShow: true });\r\n      } else {\r\n        if (this.hasBackground(loaderId)) {\r\n          this.showBackground.next({ loaderId, isShow: true });\r\n        }\r\n      }\r\n    } else {\r\n      this.createLoaderData(loaderId, isMaster, true);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * For internal use only. It may be changed in the future.\r\n   * @docs-private\r\n   */\r\n  updateLoaderId(loaderId: string, newLoaderId: string): void {\r\n    this.throwErrorIfLoaderNotExist(loaderId);\r\n    if (this.loaders[loaderId].loaderId === this.defaultConfig.masterLoaderId) {\r\n      console.warn(`[ngx-ui-loader] - Cannot change loaderId of master loader. The current ` +\r\n        `master's loaderId is \"${this.defaultConfig.masterLoaderId}\". If you really want to ` +\r\n        `change it, please use NgxUiLoaderModule.forRoot() method.`);\r\n      return;\r\n    }\r\n    if (newLoaderId !== loaderId) {\r\n      this.throwErrorIfLoaderExists(newLoaderId, true);\r\n      this.loaders[newLoaderId] = {\r\n        loaderId: newLoaderId,\r\n        background: { ...this.loaders[loaderId].background },\r\n        foreground: { ...this.loaders[loaderId].foreground },\r\n        isMaster: false,\r\n        isBound: this.loaders[loaderId].isBound\r\n      };\r\n      delete this.loaders[loaderId];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * For internal use only. It may be changed in the future.\r\n   * @docs-private\r\n   */\r\n  destroyLoaderData(loaderId: string): void {\r\n    this.stopLoaderAll(loaderId);\r\n    delete this.loaders[loaderId];\r\n  }\r\n\r\n  /**\r\n   * Get default loader configuration\r\n   * @returns default configuration object\r\n   */\r\n  getDefaultConfig(): NgxUiLoaderConfig {\r\n    return { ...this.defaultConfig };\r\n  }\r\n\r\n  /**\r\n   * Get all the loaders\r\n   */\r\n  getLoaders(): Loaders {\r\n    return JSON.parse(JSON.stringify(this.loaders));\r\n  }\r\n\r\n  /**\r\n   * Get data of a specified loader. If loaderId is not provided, it will return data of master loader(if existed)\r\n   */\r\n  getLoader(loaderId?: string): Loader {\r\n    if (loaderId) {\r\n      this.throwErrorIfLoaderNotExist(loaderId);\r\n    } else {\r\n      this.throwErrorIfMasterLoaderNotExist();\r\n      loaderId = this.defaultConfig.masterLoaderId;\r\n    }\r\n    return JSON.parse(JSON.stringify(this.loaders[loaderId]));\r\n  }\r\n\r\n  /**\r\n   * @deprecated use getLoader() or getLoaders() instead. This will be removed in the version 8.x.x\r\n   * Return status of master loader\r\n   */\r\n  getStatus(): { waitingBackground: Task, waitingForeground: Task } {\r\n    this.throwErrorIfMasterLoaderNotExist();\r\n    return {\r\n      waitingBackground: this.loaders[this.defaultConfig.masterLoaderId].background,\r\n      waitingForeground: this.loaders[this.defaultConfig.masterLoaderId].foreground\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Check whether the queue has a waiting foreground loader with the given `taskId`.\r\n   * If no `taskId` specified, it will check whether the queue has any waiting foreground loader.\r\n   * @param loaderId the loader Id\r\n   * @param taskId the optional task Id\r\n   * @returns boolean\r\n   */\r\n  hasForeground(loaderId: string, taskId?: string): boolean {\r\n    if (this.loaders[loaderId]) {\r\n      if (taskId) {\r\n        return this.loaders[loaderId].foreground[taskId] ? true : false;\r\n      }\r\n      return Object.keys(this.loaders[loaderId].foreground).length > 0;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Check whether the queue has a waiting background loader with the given `taskId`.\r\n   * If no `taskId` specified, it will check whether the queue has any waiting background loader.\r\n   * @param loaderId the loader Id\r\n   * @param taskId the optional task Id\r\n   * @returns boolean\r\n   */\r\n  hasBackground(loaderId: string, taskId?: string): boolean {\r\n    if (this.loaders[loaderId]) {\r\n      if (taskId) {\r\n        return this.loaders[loaderId].background[taskId] ? true : false;\r\n      }\r\n      return Object.keys(this.loaders[loaderId].background).length > 0;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Start the foreground loading of loader having `loaderId` with a specified `taskId`.\r\n   * The loading is only closed off when all taskIds of that loader are called with stopLoader() method.\r\n   * @param loaderId the loader Id\r\n   * @param taskId the optional task Id of the loading. taskId is set to 'default' by default.\r\n   */\r\n  startLoader(loaderId: string, taskId: string = DEFAULT_TASK_ID): void {\r\n    this.createLoaderData(loaderId, undefined, false);\r\n\r\n    const foregroundRunning = this.hasForeground(loaderId);\r\n    this.loaders[loaderId].foreground[taskId] = Date.now();\r\n\r\n    if (!this.loaders[loaderId].isBound) {\r\n      return;\r\n    }\r\n\r\n    if (!foregroundRunning) {\r\n      if (this.hasBackground(loaderId)) {\r\n        this.backgroundCloseout(loaderId);\r\n        this.showBackground.next({ loaderId, isShow: false });\r\n      }\r\n      this.showForeground.next({ loaderId, isShow: true });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Start the foreground loading of master loader with a specified `taskId`.\r\n   * The loading is only closed off when all taskIds of that loader are called with stop() method.\r\n   * NOTE: Really this function just wraps startLoader() function\r\n   * @param taskId the optional task Id of the loading. taskId is set to 'default' by default.\r\n   */\r\n  start(taskId: string = DEFAULT_TASK_ID): void {\r\n    this.startLoader(this.defaultConfig.masterLoaderId, taskId);\r\n  }\r\n\r\n  /**\r\n   * Start the background loading of loader having `loaderId` with a specified `taskId`.\r\n   * The loading is only closed off when all taskIds of that loader are called with stopLoaderBackground() method.\r\n   * @param loaderId the loader Id\r\n   * @param taskId the optional task Id of the loading. taskId is set to 'default' by default.\r\n   */\r\n  startBackgroundLoader(loaderId: string, taskId: string = DEFAULT_TASK_ID): void {\r\n    this.createLoaderData(loaderId, undefined, false);\r\n\r\n    this.loaders[loaderId].background[taskId] = Date.now();\r\n\r\n    if (!this.loaders[loaderId].isBound) {\r\n      return;\r\n    }\r\n\r\n    if (!this.hasForeground(loaderId)) {\r\n      this.showBackground.next({ loaderId, isShow: true });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Start the background loading of master loader with a specified `taskId`.\r\n   * The loading is only closed off when all taskIds of that loader are called with stopBackground() method.\r\n   * NOTE: Really this function just wraps startBackgroundLoader() function\r\n   * @param taskId the optional task Id of the loading. taskId is set to 'default' by default.\r\n   */\r\n  startBackground(taskId: string = DEFAULT_TASK_ID): void {\r\n    this.startBackgroundLoader(this.defaultConfig.masterLoaderId, taskId);\r\n  }\r\n\r\n  /**\r\n   * Stop a foreground loading of loader having `loaderId` with specific `taskId`\r\n   * @param loaderId the loader Id\r\n   * @param taskId the optional task Id to stop. If not provided, 'default' is used.\r\n   * @returns Object\r\n   */\r\n  stopLoader(loaderId: string, taskId: string = DEFAULT_TASK_ID): void {\r\n    this.throwErrorIfLoaderNotExist(loaderId);\r\n\r\n    // Update loader data {{{\r\n    const now = Date.now();\r\n    if (this.hasForeground(loaderId, taskId)) {\r\n      if (this.loaders[loaderId].foreground[taskId] + this.defaultConfig.threshold > now) {\r\n        setTimeout(() => {\r\n          this.stopLoader(loaderId, taskId);\r\n        }, this.loaders[loaderId].foreground[taskId] + this.defaultConfig.threshold - now);\r\n        return;\r\n      }\r\n      delete this.loaders[loaderId].foreground[taskId];\r\n    } else {\r\n      return;\r\n    }\r\n    // }}}\r\n\r\n    // Emit ShowEvents to update view {{{\r\n    if (!this.hasForeground(loaderId)) {\r\n      this.foregroundCloseout(loaderId);\r\n      this.showForeground.next({ loaderId, isShow: false });\r\n      if (this.hasBackground(loaderId)) {\r\n        setTimeout(() => {\r\n          if (this.hasBackground(loaderId)) { // still have background tasks\r\n            this.showBackground.next({ loaderId, isShow: true });\r\n          }\r\n        }, WAITING_FOR_OVERLAY_DISAPPEAR);\r\n      }\r\n    }\r\n    // }}}\r\n  }\r\n\r\n  /**\r\n   * Stop a foreground loading of master loader with specific `taskId`\r\n   * @param taskId the optional task Id to stop. If not provided, 'default' is used.\r\n   * @returns Object\r\n   */\r\n  stop(taskId: string = DEFAULT_TASK_ID): void {\r\n    this.stopLoader(this.defaultConfig.masterLoaderId, taskId);\r\n  }\r\n\r\n  /**\r\n   * Stop a background loading of loader having `loaderId` with specific `taskId`\r\n   * @param loaderId the loader Id\r\n   * @param taskId the optional task Id to stop. If not provided, 'default' is used.\r\n   * @returns Object\r\n   */\r\n  stopBackgroundLoader(loaderId: string, taskId: string = DEFAULT_TASK_ID): void {\r\n    this.throwErrorIfLoaderNotExist(loaderId);\r\n\r\n    // Update loader data {{{\r\n    const now = Date.now();\r\n    if (this.hasBackground(loaderId, taskId)) {\r\n      if (this.loaders[loaderId].background[taskId] + this.defaultConfig.threshold > now) {\r\n        setTimeout(() => {\r\n          this.stopBackgroundLoader(loaderId, taskId);\r\n        }, this.loaders[loaderId].background[taskId] + this.defaultConfig.threshold - now);\r\n        return;\r\n      }\r\n      delete this.loaders[loaderId].background[taskId];\r\n    } else {\r\n      return;\r\n    }\r\n    // }}}\r\n\r\n    // Emit ShowEvents to update view {{{\r\n    if (!this.hasForeground(loaderId) && !this.hasBackground(loaderId)) {\r\n      this.backgroundCloseout(loaderId);\r\n      this.showBackground.next({ loaderId, isShow: false });\r\n    }\r\n    // }}}\r\n  }\r\n\r\n  /**\r\n   * Stop a background loading of master loader with specific taskId\r\n   * @param taskId the optional task Id to stop. If not provided, 'default' is used.\r\n   * @returns Object\r\n   */\r\n  stopBackground(taskId: string = DEFAULT_TASK_ID): void {\r\n    this.stopBackgroundLoader(this.defaultConfig.masterLoaderId, taskId);\r\n  }\r\n\r\n  /**\r\n   * Stop all the background and foreground loadings of loader having `loaderId`\r\n   * @param loaderId the loader Id\r\n   */\r\n  stopLoaderAll(loaderId: string): void {\r\n    this.throwErrorIfLoaderNotExist(loaderId);\r\n\r\n    if (this.hasForeground(loaderId)) {\r\n      this.foregroundCloseout(loaderId);\r\n      this.showForeground.next({ loaderId, isShow: false });\r\n    } else if (this.hasBackground(loaderId)) {\r\n      this.backgroundCloseout(loaderId);\r\n      this.showBackground.next({ loaderId, isShow: false });\r\n    }\r\n    this.loaders[loaderId].foreground = {};\r\n    this.loaders[loaderId].background = {};\r\n  }\r\n\r\n  /**\r\n   * Stop all the background and foreground loadings of master loader\r\n   */\r\n  stopAll(): void {\r\n    this.stopLoaderAll(this.defaultConfig.masterLoaderId);\r\n  }\r\n\r\n  /**\r\n   * Create loader data if it does not exist\r\n   * @param loaderId\r\n   * @param isMaster\r\n   * @param isBound\r\n   * @docs-private\r\n   */\r\n  private createLoaderData(loaderId: string, isMaster: boolean, isBound: boolean): void {\r\n    if (!this.loaders[loaderId]) {\r\n      this.loaders[loaderId] = {\r\n        loaderId,\r\n        foreground: {},\r\n        background: {},\r\n        isMaster,\r\n        isBound\r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Throw error if the loaderId does not exist.\r\n   * @docs-private\r\n   */\r\n  private throwErrorIfLoaderNotExist(loaderId: string): void {\r\n    if (!this.loaders[loaderId]) {\r\n      throw new Error(`[ngx-ui-loader] - loaderId \"${loaderId}\" does not exist.`);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Throw error if the loaderId has already existed.\r\n   * @docs-private\r\n   */\r\n  private throwErrorIfLoaderExists(loaderId: string, useIsBoundProp?: boolean): void {\r\n    if (this.loaders[loaderId] && (this.loaders[loaderId].isBound && useIsBoundProp)) {\r\n      throw new Error(`[ngx-ui-loader] - loaderId \"${loaderId}\" is duplicated. Please choose another one!`);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Throw error if the master loader has already existed.\r\n   * @docs-private\r\n   */\r\n  private throwErrorIfMasterLoaderExists(useIsBoundProp?: boolean): void {\r\n    if (this.loaders[this.defaultConfig.masterLoaderId] && (this.loaders[this.defaultConfig.masterLoaderId].isBound && useIsBoundProp)) {\r\n      throw new Error(`[ngx-ui-loader] - The master loader has already existed. `\r\n        + `The app should have only one master loader and it should be placed in the root app template`);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Throw error if the master loader does not exist.\r\n   * @docs-private\r\n   */\r\n  private throwErrorIfMasterLoaderNotExist(): void {\r\n    if (!this.loaders[this.defaultConfig.masterLoaderId]) {\r\n      throw new Error(`[ngx-ui-loader] - The master loader does not exist.`);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Manage to close foreground loading\r\n   * @param loaderId the loader id\r\n   */\r\n  private foregroundCloseout(loaderId: string): void {\r\n    this.fgClosing.next({ loaderId, isShow: true });\r\n    setTimeout(() => {\r\n      this.fgClosing.next({ loaderId, isShow: false });\r\n    }, CLOSING_TIME);\r\n  }\r\n\r\n  /**\r\n   * Manage to close background loading\r\n   * @param loaderId the loader id\r\n   */\r\n  private backgroundCloseout(loaderId: string): void {\r\n    this.bgClosing.next({ loaderId, isShow: true });\r\n    setTimeout(() => {\r\n      this.bgClosing.next({ loaderId, isShow: false });\r\n    }, CLOSING_TIME);\r\n  }\r\n}\r\n","/**\r\n * Coerce a value (string) to a number\r\n * @param value\r\n * @param fallbackValue\r\n */\r\nexport function coerceNumber(value, fallbackValue): number {\r\n  return !isNaN(parseFloat(value as any)) && !isNaN(Number(value)) ? Number(value) : fallbackValue;\r\n}\r\n","import { Component, Input, OnInit, OnChanges, SimpleChanges, SimpleChange,\r\n  OnDestroy, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\r\nimport { DomSanitizer, SafeResourceUrl, SafeStyle } from '@angular/platform-browser';\r\nimport { NgxUiLoaderService } from './ngx-ui-loader.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { filter } from 'rxjs/operators';\r\n\r\nimport { NgxUiLoaderConfig } from './ngx-ui-loader-config';\r\nimport { DirectionType, PositionType, SpinnerType } from './ngx-ui-loader.types';\r\nimport { POSITION, PB_DIRECTION, SPINNER } from './ngx-ui-loader.enums';\r\nimport { SPINNER_CONFIG } from './ngx-ui-loader.contants';\r\nimport { ShowEvent } from './ngx-ui-loader.interfaces';\r\nimport { coerceNumber } from './coercion';\r\n\r\n@Component({\r\n  selector: 'ngx-ui-loader',\r\n  templateUrl: './ngx-ui-loader.component.html',\r\n  styleUrls: ['./ngx-ui-loader.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class NgxUiLoaderComponent implements OnChanges, OnDestroy, OnInit {\r\n\r\n  @Input() bgsColor: string;\r\n  @Input() bgsOpacity: number;\r\n  @Input() bgsPosition: PositionType;\r\n  @Input() bgsSize: number;\r\n  @Input() bgsType: SpinnerType;\r\n  @Input() fgsColor: string;\r\n  @Input() fgsPosition: PositionType;\r\n  @Input() fgsSize: number;\r\n  @Input() fgsType: SpinnerType;\r\n  @Input() gap: number;\r\n  @Input() loaderId: string;\r\n  @Input() logoPosition: PositionType;\r\n  @Input() logoSize: number;\r\n  @Input() logoUrl: string;\r\n  @Input() overlayBorderRadius: string;\r\n  @Input() overlayColor: string;\r\n  @Input() pbColor: string;\r\n  @Input() pbDirection: DirectionType;\r\n  @Input() pbThickness: number;\r\n  @Input() hasProgressBar: boolean;\r\n  @Input() text: string;\r\n  @Input() textColor: string;\r\n  @Input() textPosition: PositionType;\r\n\r\n  fgDivs: number[];\r\n  fgSpinnerClass: string;\r\n  bgDivs: number[];\r\n  bgSpinnerClass: string;\r\n  showForeground: boolean;\r\n  showBackground: boolean;\r\n  foregroundClosing: boolean;\r\n  backgroundClosing: boolean;\r\n\r\n  trustedLogoUrl: SafeResourceUrl;\r\n  logoTop: SafeStyle;\r\n  spinnerTop: SafeStyle;\r\n  textTop: SafeStyle;\r\n\r\n  showForegroundWatcher: Subscription;\r\n  showBackgroundWatcher: Subscription;\r\n  foregroundClosingWatcher: Subscription;\r\n  backgroundClosingWatcher: Subscription;\r\n\r\n  defaultConfig: NgxUiLoaderConfig;\r\n  initialized: boolean;\r\n\r\n  /**\r\n   * Constructor\r\n   * @param domSanitizer\r\n   * @param ngxService\r\n   */\r\n  constructor(\r\n    private domSanitizer: DomSanitizer,\r\n    private changeDetectorRef: ChangeDetectorRef,\r\n    private ngxService: NgxUiLoaderService) {\r\n\r\n    this.initialized = false;\r\n    this.defaultConfig = this.ngxService.getDefaultConfig();\r\n\r\n    this.bgsColor = this.defaultConfig.bgsColor;\r\n    this.bgsOpacity = this.defaultConfig.bgsOpacity;\r\n    this.bgsPosition = this.defaultConfig.bgsPosition;\r\n    this.bgsSize = this.defaultConfig.bgsSize;\r\n    this.bgsType = this.defaultConfig.bgsType;\r\n    this.fgsColor = this.defaultConfig.fgsColor;\r\n    this.fgsPosition = this.defaultConfig.fgsPosition;\r\n    this.fgsSize = this.defaultConfig.fgsSize;\r\n    this.fgsType = this.defaultConfig.fgsType;\r\n    this.gap = this.defaultConfig.gap;\r\n    this.loaderId = this.defaultConfig.masterLoaderId;\r\n    this.logoPosition = this.defaultConfig.logoPosition;\r\n    this.logoSize = this.defaultConfig.logoSize;\r\n    this.logoUrl = this.defaultConfig.logoUrl;\r\n    this.overlayBorderRadius = this.defaultConfig.overlayBorderRadius;\r\n    this.overlayColor = this.defaultConfig.overlayColor;\r\n    this.pbColor = this.defaultConfig.pbColor;\r\n    this.pbDirection = this.defaultConfig.pbDirection;\r\n    this.pbThickness = this.defaultConfig.pbThickness;\r\n    this.hasProgressBar = this.defaultConfig.hasProgressBar;\r\n    this.text = this.defaultConfig.text;\r\n    this.textColor = this.defaultConfig.textColor;\r\n    this.textPosition = this.defaultConfig.textPosition;\r\n  }\r\n\r\n  /**\r\n   * On init event\r\n   */\r\n  ngOnInit() {\r\n    this.initializeSpinners();\r\n    this.ngxService.initLoaderData(this.loaderId);\r\n    this.determinePositions();\r\n\r\n    this.bgsPosition = <PositionType>this.validate('bgsPosition', this.bgsPosition, POSITION, this.defaultConfig.bgsPosition);\r\n\r\n    this.trustedLogoUrl = this.domSanitizer.bypassSecurityTrustResourceUrl(this.logoUrl);\r\n\r\n    this.pbDirection = <DirectionType>this.validate('pbDirection', this.pbDirection, PB_DIRECTION, this.defaultConfig.pbDirection);\r\n\r\n    this.showForegroundWatcher = this.ngxService.showForeground$\r\n      .pipe(filter((showEvent: ShowEvent) => this.loaderId === showEvent.loaderId))\r\n      .subscribe(data => {\r\n        this.showForeground = data.isShow;\r\n        this.changeDetectorRef.markForCheck();\r\n      });\r\n\r\n    this.showBackgroundWatcher = this.ngxService.showBackground$\r\n      .pipe(filter((showEvent: ShowEvent) => this.loaderId === showEvent.loaderId))\r\n      .subscribe(data => {\r\n        this.showBackground = data.isShow;\r\n        this.changeDetectorRef.markForCheck();\r\n      });\r\n\r\n    this.foregroundClosingWatcher = this.ngxService.foregroundClosing$\r\n      .pipe(filter((showEvent: ShowEvent) => this.loaderId === showEvent.loaderId))\r\n      .subscribe(data => {\r\n        this.foregroundClosing = data.isShow;\r\n        this.changeDetectorRef.markForCheck();\r\n      });\r\n\r\n    this.backgroundClosingWatcher = this.ngxService.backgroundClosing$\r\n      .pipe(filter((showEvent: ShowEvent) => this.loaderId === showEvent.loaderId))\r\n      .subscribe(data => {\r\n        this.backgroundClosing = data.isShow;\r\n        this.changeDetectorRef.markForCheck();\r\n      });\r\n    this.initialized = true;\r\n  }\r\n\r\n  /**\r\n   * On changes event\r\n   * @param changes\r\n   */\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (!this.initialized) {\r\n      return;\r\n    }\r\n\r\n    const bgsTypeChange: SimpleChange = changes.bgsType;\r\n    const bgsPositionChange: SimpleChange = changes.bgsPosition;\r\n    const fgsTypeChange: SimpleChange = changes.fgsType;\r\n    const loaderIdChange: SimpleChange = changes.loaderId;\r\n    const logoUrlChange: SimpleChange = changes.logoUrl;\r\n    const pbDirectionChange: SimpleChange = changes.pbDirection;\r\n\r\n    if (fgsTypeChange || bgsTypeChange) {\r\n      this.initializeSpinners();\r\n    }\r\n\r\n    if (loaderIdChange) {\r\n      this.ngxService.updateLoaderId(loaderIdChange.previousValue, this.loaderId);\r\n    }\r\n\r\n    this.determinePositions();\r\n\r\n    if (bgsPositionChange) {\r\n      this.bgsPosition = <PositionType>this.validate('bgsPosition', this.bgsPosition, POSITION, this.defaultConfig.bgsPosition);\r\n    }\r\n\r\n    if (logoUrlChange) {\r\n      this.trustedLogoUrl = this.domSanitizer.bypassSecurityTrustResourceUrl(this.logoUrl);\r\n    }\r\n\r\n    if (pbDirectionChange) {\r\n      this.pbDirection = <DirectionType>this.validate('pbDirection', this.pbDirection, PB_DIRECTION, this.defaultConfig.pbDirection);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Initialize spinners\r\n   */\r\n  private initializeSpinners(): void {\r\n    this.fgsType = <SpinnerType>this.validate('fgsType', this.fgsType, SPINNER, this.defaultConfig.fgsType);\r\n    this.bgsType = <SpinnerType>this.validate('bgsType', this.bgsType, SPINNER, this.defaultConfig.bgsType);\r\n\r\n    this.fgDivs = Array(SPINNER_CONFIG[this.fgsType].divs).fill(1);\r\n    this.fgSpinnerClass = SPINNER_CONFIG[this.fgsType].class;\r\n    this.bgDivs = Array(SPINNER_CONFIG[this.bgsType].divs).fill(1);\r\n    this.bgSpinnerClass = SPINNER_CONFIG[this.bgsType].class;\r\n  }\r\n\r\n  /**\r\n   * Determine the positions of spinner, logo and text\r\n   */\r\n  private determinePositions(): void {\r\n    this.fgsPosition = <PositionType>this.validate('fgsPosition', this.fgsPosition, POSITION, this.defaultConfig.fgsPosition);\r\n    this.logoPosition = <PositionType>this.validate('logoPosition', this.logoPosition, POSITION, this.defaultConfig.logoPosition);\r\n    this.textPosition = <PositionType>this.validate('textPosition', this.textPosition, POSITION, this.defaultConfig.textPosition);\r\n    this.gap = coerceNumber(this.gap, this.defaultConfig.gap);\r\n\r\n    this.logoTop = 'initial';\r\n    this.spinnerTop = 'initial';\r\n    this.textTop = 'initial';\r\n    const textSize = 24;\r\n\r\n    if (this.logoPosition.startsWith('center')) {\r\n      this.logoTop = '50%';\r\n    } else if (this.logoPosition.startsWith('top')) {\r\n      this.logoTop = '30px';\r\n    }\r\n\r\n    if (this.fgsPosition.startsWith('center')) {\r\n      this.spinnerTop = '50%';\r\n    } else if (this.fgsPosition.startsWith('top')) {\r\n      this.spinnerTop = '30px';\r\n    }\r\n\r\n    if (this.textPosition.startsWith('center')) {\r\n      this.textTop = '50%';\r\n    } else if (this.textPosition.startsWith('top')) {\r\n      this.textTop = '30px';\r\n    }\r\n\r\n    if (this.fgsPosition === POSITION.centerCenter) {\r\n      if (this.logoUrl && this.logoPosition === POSITION.centerCenter) {\r\n        if (this.text && this.textPosition === POSITION.centerCenter) { // logo, spinner and text\r\n          this.logoTop = this.domSanitizer\r\n            .bypassSecurityTrustStyle(`calc(50% - ${this.fgsSize / 2}px - ${textSize / 2}px - ${this.gap}px)`);\r\n          this.spinnerTop = this.domSanitizer\r\n            .bypassSecurityTrustStyle(`calc(50% + ${this.logoSize / 2}px - ${textSize / 2}px)`);\r\n          this.textTop = this.domSanitizer\r\n            .bypassSecurityTrustStyle(`calc(50% + ${this.logoSize / 2}px + ${this.gap}px + ${this.fgsSize / 2}px)`);\r\n        } else { // logo and spinner\r\n          this.logoTop = this.domSanitizer\r\n            .bypassSecurityTrustStyle(`calc(50% - ${this.fgsSize / 2}px - ${this.gap / 2}px)`);\r\n          this.spinnerTop = this.domSanitizer\r\n            .bypassSecurityTrustStyle(`calc(50% + ${this.logoSize / 2}px + ${this.gap / 2}px)`);\r\n        }\r\n      } else {\r\n        if (this.text && this.textPosition === POSITION.centerCenter) { // spinner and text\r\n          this.spinnerTop = this.domSanitizer\r\n            .bypassSecurityTrustStyle(`calc(50% - ${textSize / 2}px - ${this.gap / 2}px)`);\r\n          this.textTop = this.domSanitizer\r\n            .bypassSecurityTrustStyle(`calc(50% + ${this.fgsSize / 2}px + ${this.gap / 2}px)`);\r\n        }\r\n      }\r\n    } else {\r\n      if (this.logoUrl && this.logoPosition === POSITION.centerCenter\r\n        && this.text && this.textPosition === POSITION.centerCenter) { // logo and text\r\n        this.logoTop = this.domSanitizer\r\n          .bypassSecurityTrustStyle(`calc(50% - ${textSize / 2}px - ${this.gap / 2}px)`);\r\n        this.textTop = this.domSanitizer\r\n          .bypassSecurityTrustStyle(`calc(50% + ${this.logoSize / 2}px + ${this.gap / 2}px)`);\r\n      }\r\n    }\r\n  }\r\n\r\n  private validate(inputName: string, value: string, validTypeObj: {}, fallbackValue: string): string {\r\n    if (Object.keys(validTypeObj).map(k => validTypeObj[k]).findIndex(v => v === value) === -1) {\r\n      console.error(`[ngx-ui-loader] - ${inputName} (\"${value}\") is invalid. `\r\n        + `Default value \"${fallbackValue}\" is used.`);\r\n      return fallbackValue;\r\n    }\r\n    return value;\r\n  }\r\n\r\n  /**\r\n   * On destroy event\r\n   */\r\n  ngOnDestroy() {\r\n    this.ngxService.destroyLoaderData(this.loaderId);\r\n    if (this.showForegroundWatcher) {\r\n      this.showForegroundWatcher.unsubscribe();\r\n    }\r\n    if (this.showBackgroundWatcher) {\r\n      this.showBackgroundWatcher.unsubscribe();\r\n    }\r\n    if (this.foregroundClosingWatcher) {\r\n      this.foregroundClosingWatcher.unsubscribe();\r\n    }\r\n    if (this.backgroundClosingWatcher) {\r\n      this.backgroundClosingWatcher.unsubscribe();\r\n    }\r\n  }\r\n}\r\n","import { Directive, ElementRef, Input, OnDestroy, Renderer2, OnInit } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { filter } from 'rxjs/operators';\r\n\r\nimport { NgxUiLoaderService } from './ngx-ui-loader.service';\r\nimport { coerceNumber } from './coercion';\r\nimport { ShowEvent } from './ngx-ui-loader.interfaces';\r\nimport { WAITING_FOR_OVERLAY_DISAPPEAR } from './ngx-ui-loader.contants';\r\n\r\n@Directive({ selector: '[ngxUiLoaderBlurred]' })\r\nexport class NgxUiLoaderBlurredDirective implements OnInit, OnDestroy {\r\n\r\n  private blurNumber: number;\r\n\r\n  @Input()\r\n  get blur(): number {\r\n    return this.blurNumber;\r\n  }\r\n\r\n  set blur(value: number) {\r\n    this.blurNumber = coerceNumber(value, this.ngxUiLoaderService.getDefaultConfig().blur);\r\n  }\r\n\r\n  @Input() loaderId: string;\r\n\r\n  showForegroundWatcher: Subscription;\r\n\r\n  constructor(\r\n    private elementRef: ElementRef,\r\n    private renderer: Renderer2,\r\n    private ngxUiLoaderService: NgxUiLoaderService\r\n  ) {\r\n    this.blurNumber = this.ngxUiLoaderService.getDefaultConfig().blur;\r\n    this.loaderId = this.ngxUiLoaderService.getDefaultConfig().masterLoaderId;\r\n  }\r\n\r\n  /**\r\n   * On Init event\r\n   */\r\n  ngOnInit() {\r\n    this.showForegroundWatcher = this.ngxUiLoaderService.showForeground$\r\n      .pipe(filter((showEvent: ShowEvent) => this.loaderId === showEvent.loaderId))\r\n      .subscribe(data => {\r\n        if (data.isShow) {\r\n          const filterValue = `blur(${this.blurNumber}px)`;\r\n          this.renderer.setStyle(this.elementRef.nativeElement, '-webkit-filter', filterValue);\r\n          this.renderer.setStyle(this.elementRef.nativeElement, 'filter', filterValue);\r\n        } else {\r\n          setTimeout(() => {\r\n            if (!this.ngxUiLoaderService.hasForeground(data.loaderId)) {\r\n              this.renderer.setStyle(this.elementRef.nativeElement, '-webkit-filter', 'none');\r\n              this.renderer.setStyle(this.elementRef.nativeElement, 'filter', 'none');\r\n            }\r\n          }, WAITING_FOR_OVERLAY_DISAPPEAR);\r\n        }\r\n      });\r\n  }\r\n\r\n  /**\r\n   * On destroy event\r\n   */\r\n  ngOnDestroy() {\r\n    if (this.showForegroundWatcher) {\r\n      this.showForegroundWatcher.unsubscribe();\r\n    }\r\n  }\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { NgxUiLoaderComponent } from './ngx-ui-loader.component';\r\nimport { NgxUiLoaderBlurredDirective } from './ngx-ui-loader-blurred.directive';\r\nimport { NGX_UI_LOADER_CONFIG_TOKEN } from './ngx-ui-loader-config.token';\r\nimport { NgxUiLoaderConfig } from './ngx-ui-loader-config';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n  ],\r\n  declarations: [\r\n    NgxUiLoaderComponent,\r\n    NgxUiLoaderBlurredDirective,\r\n  ],\r\n  exports: [\r\n    NgxUiLoaderComponent,\r\n    NgxUiLoaderBlurredDirective,\r\n  ]\r\n})\r\nexport class NgxUiLoaderModule {\r\n\r\n  /**\r\n   * forRoot\r\n   * @param ngxUiLoaderConfig\r\n   * @returns A module with its provider dependencies\r\n   */\r\n  static forRoot(ngxUiLoaderConfig: NgxUiLoaderConfig): ModuleWithProviders {\r\n    return {\r\n      ngModule: NgxUiLoaderModule,\r\n      providers: [\r\n        {\r\n          provide: NGX_UI_LOADER_CONFIG_TOKEN,\r\n          useValue: ngxUiLoaderConfig\r\n        }\r\n      ]\r\n    };\r\n  }\r\n}\r\n","import { InjectionToken } from '@angular/core';\r\nimport { NgxUiLoaderRouterConfig } from './ngx-ui-loader-router-config';\r\n\r\n/**\r\n * Injection token for ngx-ui-loader-router configuration\r\n */\r\nexport const NGX_UI_LOADER_ROUTER_CONFIG_TOKEN = new InjectionToken<NgxUiLoaderRouterConfig>('ngxUiLoaderRouterCustom.config');\r\n","/**\r\n * Router loader id\r\n */\r\nexport const ROUTER_LOADER_ID = '$_router_loader';\r\n","import { NgModule, ModuleWithProviders, Inject, Optional, SkipSelf } from '@angular/core';\r\nimport { NavigationCancel, NavigationEnd, NavigationError, NavigationStart, Router } from '@angular/router';\r\n\r\nimport { NgxUiLoaderService } from '../core/ngx-ui-loader.service';\r\nimport { NgxUiLoaderRouterConfig } from './ngx-ui-loader-router-config';\r\nimport { NGX_UI_LOADER_ROUTER_CONFIG_TOKEN } from './ngx-ui-loader-router-config.token';\r\nimport { ROUTER_LOADER_ID } from './ngx-ui-loader-router.constants';\r\n\r\n@NgModule({})\r\nexport class NgxUiLoaderRouterModule {\r\n\r\n  /**\r\n   * forRoot\r\n   * @param routerConfig Configuration\r\n   * @returns A module with its provider dependencies\r\n   */\r\n  static forRoot(routerConfig: NgxUiLoaderRouterConfig): ModuleWithProviders {\r\n    return {\r\n      ngModule: NgxUiLoaderRouterModule,\r\n      providers: [\r\n        {\r\n          provide: NGX_UI_LOADER_ROUTER_CONFIG_TOKEN,\r\n          useValue: routerConfig\r\n        }\r\n      ]\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Constructor\r\n   *\r\n   * @param parentModule\r\n   * @param config\r\n   * @param router\r\n   * @param ngxUiLoaderService\r\n   */\r\n  constructor(\r\n    @Optional() @SkipSelf() parentModule: NgxUiLoaderRouterModule,\r\n    @Optional() @Inject(NGX_UI_LOADER_ROUTER_CONFIG_TOKEN) config: NgxUiLoaderRouterConfig,\r\n    router: Router,\r\n    ngxUiLoaderService: NgxUiLoaderService) {\r\n\r\n    if (parentModule) {\r\n      throw new Error('[ngx-ui-loader] - NgxUiLoaderRouterModule is already loaded. It should be imported in the root `AppModule` only!');\r\n    }\r\n\r\n    let defaultConfig: NgxUiLoaderRouterConfig = {\r\n      loaderId: ngxUiLoaderService.getDefaultConfig().masterLoaderId,\r\n      showForeground: true\r\n    };\r\n\r\n    if (config) {\r\n      defaultConfig = { ...defaultConfig, ...config };\r\n    }\r\n\r\n    router.events\r\n      .subscribe(event => {\r\n        if (event instanceof NavigationStart) {\r\n          if (defaultConfig.showForeground) {\r\n            ngxUiLoaderService.startLoader(defaultConfig.loaderId, ROUTER_LOADER_ID);\r\n          } else {\r\n            ngxUiLoaderService.startBackgroundLoader(defaultConfig.loaderId, ROUTER_LOADER_ID);\r\n          }\r\n        }\r\n\r\n        if (event instanceof NavigationEnd || event instanceof NavigationCancel || event instanceof NavigationError) {\r\n          if (defaultConfig.showForeground) {\r\n            ngxUiLoaderService.stopLoader(defaultConfig.loaderId, ROUTER_LOADER_ID);\r\n          } else {\r\n            ngxUiLoaderService.stopBackgroundLoader(defaultConfig.loaderId, ROUTER_LOADER_ID);\r\n          }\r\n        }\r\n      });\r\n  }\r\n}\r\n","import { InjectionToken } from '@angular/core';\r\nimport { NgxUiLoaderHttpConfig } from './ngx-ui-loader-http-config';\r\n\r\n/**\r\n * Injection token for ngx-ui-loader-http configuration\r\n */\r\nexport const NGX_UI_LOADER_HTTP_CONFIG_TOKEN = new InjectionToken<NgxUiLoaderHttpConfig>('ngxUiLoaderHttpCustom.config');\r\n","/**\r\n * Http loader id\r\n */\r\nexport const HTTP_LOADER_ID = '$_http-loader';\r\n","import { Injectable, Inject, Optional } from '@angular/core';\r\nimport { HttpInterceptor, HttpEvent, HttpHandler, HttpRequest } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\nimport { NgxUiLoaderService } from '../core/ngx-ui-loader.service';\r\nimport { NGX_UI_LOADER_HTTP_CONFIG_TOKEN } from './ngx-ui-loader-http-config.token';\r\nimport { NgxUiLoaderHttpConfig } from './ngx-ui-loader-http-config';\r\nimport { HTTP_LOADER_ID } from './ngx-ui-loader-http.constants';\r\n\r\n@Injectable()\r\nexport class NgxUiLoaderHttpInterceptor implements HttpInterceptor {\r\n\r\n  private count: number;\r\n  private defaultConfig: NgxUiLoaderHttpConfig;\r\n  private exclude: string[];\r\n  private excludeRegexp: RegExp[];\r\n\r\n  /**\r\n   * Constructor\r\n   * @param config\r\n   * @param ngxUiLoaderService\r\n   */\r\n  constructor(@Optional() @Inject(NGX_UI_LOADER_HTTP_CONFIG_TOKEN) config: NgxUiLoaderHttpConfig,\r\n    private ngxUiLoaderService: NgxUiLoaderService) {\r\n\r\n    this.count = 0;\r\n    this.defaultConfig = {\r\n      loaderId: this.ngxUiLoaderService.getDefaultConfig().masterLoaderId,\r\n      showForeground: false\r\n    };\r\n\r\n    if (config) {\r\n      if (config.exclude) {\r\n        this.exclude = config.exclude.map(url => url.toLowerCase());\r\n      }\r\n      if (config.excludeRegexp) {\r\n        this.excludeRegexp = config.excludeRegexp.map(regexp => new RegExp(regexp, 'i'));\r\n      }\r\n      this.defaultConfig = { ...this.defaultConfig, ...config };\r\n    }\r\n  }\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    if (this.isIgnored(req.url)) {\r\n      return next.handle(req);\r\n    }\r\n\r\n    this.count++;\r\n    if (this.defaultConfig.showForeground) {\r\n      if (!this.ngxUiLoaderService.hasForeground(this.defaultConfig.loaderId, HTTP_LOADER_ID)) {\r\n        this.ngxUiLoaderService.startLoader(this.defaultConfig.loaderId, HTTP_LOADER_ID);\r\n      }\r\n    } else {\r\n      if (!this.ngxUiLoaderService.hasBackground(this.defaultConfig.loaderId, HTTP_LOADER_ID)) {\r\n        this.ngxUiLoaderService.startBackgroundLoader(this.defaultConfig.loaderId, HTTP_LOADER_ID);\r\n      }\r\n    }\r\n\r\n    return next.handle(req).pipe(finalize(() => {\r\n      this.count--;\r\n      if (this.count === 0) {\r\n        if (this.defaultConfig.showForeground) {\r\n          this.ngxUiLoaderService.stopLoader(this.defaultConfig.loaderId, HTTP_LOADER_ID);\r\n        } else {\r\n          this.ngxUiLoaderService.stopBackgroundLoader(this.defaultConfig.loaderId, HTTP_LOADER_ID);\r\n        }\r\n      }\r\n    }));\r\n  }\r\n\r\n  private isIgnored(url: string): boolean {\r\n    if (this.exclude) {\r\n      // do not show the loader for api urls in the `exclude` list\r\n      if (this.exclude.findIndex(str => url.toLowerCase().startsWith(str)) !== -1) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    if (this.excludeRegexp) {\r\n      // do not show the loader for api urls which matches regexps in the `excludeRegexp` list\r\n      if (this.excludeRegexp.findIndex(regexp => regexp.test(url)) !== -1) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n}\r\n","import { NgModule, ModuleWithProviders, Optional, SkipSelf } from '@angular/core';\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\n\r\nimport { NgxUiLoaderHttpInterceptor } from './ngx-ui-loader-http.interceptor';\r\nimport { NgxUiLoaderHttpConfig } from './ngx-ui-loader-http-config';\r\nimport { NGX_UI_LOADER_HTTP_CONFIG_TOKEN } from './ngx-ui-loader-http-config.token';\r\n\r\n@NgModule({\r\n  providers: [\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: NgxUiLoaderHttpInterceptor,\r\n      multi: true\r\n    }\r\n  ],\r\n})\r\nexport class NgxUiLoaderHttpModule {\r\n\r\n  /**\r\n   * Constructor\r\n   * @param parentModule optional\r\n   */\r\n  constructor(@Optional() @SkipSelf() parentModule: NgxUiLoaderHttpModule) {\r\n    if (parentModule) {\r\n      throw new Error('[ngx-ui-loader] - NgxUiLoaderHttpModule is already loaded. It should be imported in the root `AppModule` only!');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * forRoot\r\n   * @param httpConfig Configuration\r\n   * @returns A module with its provider dependencies\r\n   */\r\n  static forRoot(httpConfig: NgxUiLoaderHttpConfig): ModuleWithProviders {\r\n    return {\r\n      ngModule: NgxUiLoaderHttpModule,\r\n      providers: [\r\n        {\r\n          provide: NGX_UI_LOADER_HTTP_CONFIG_TOKEN,\r\n          useValue: httpConfig\r\n        }\r\n      ]\r\n    };\r\n  }\r\n}\r\n"],"names":[],"mappings":"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"}
