{"version":3,"sources":["node_modules/tslib/tslib.es6.js","ng://ngx-ui-loader/lib/core/ngx-ui-loader.enums.ts","ng://ngx-ui-loader/lib/core/ngx-ui-loader.contants.ts","ng://ngx-ui-loader/lib/core/ngx-ui-loader-config.token.ts","ng://ngx-ui-loader/lib/core/ngx-ui-loader.service.ts","ng://ngx-ui-loader/lib/core/coercion.ts","ng://ngx-ui-loader/lib/core/ngx-ui-loader.component.ts","ng://ngx-ui-loader/lib/core/ngx-ui-loader-blurred.directive.ts","ng://ngx-ui-loader/lib/core/ngx-ui-loader.module.ts","ng://ngx-ui-loader/lib/router/ngx-ui-loader-router-config.token.ts","ng://ngx-ui-loader/lib/router/ngx-ui-loader-router.constants.ts","ng://ngx-ui-loader/lib/router/ngx-ui-loader-router.module.ts","ng://ngx-ui-loader/lib/http/ngx-ui-loader-http-config.token.ts","ng://ngx-ui-loader/lib/http/ngx-ui-loader-http.constants.ts","ng://ngx-ui-loader/lib/http/ngx-ui-loader-http.interceptor.ts","ng://ngx-ui-loader/lib/http/ngx-ui-loader-http.module.ts"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","ballScaleMultiple","ballSpin","ballSpinClockwise","ballSpinClockwiseFadeRotating","ballSpinFadeRotating","chasingDots","circle","cubeGrid","doubleBounce","fadingCircle","foldingCube","pulse","rectangleBounce","rectangleBounceParty","rectangleBouncePulseOut","rectangleBouncePulseOutRapid","rotatingPlane","squareJellyBox","squareLoader","threeBounce","threeStrings","wanderingCubes","bottomCenter","bottomLeft","bottomRight","centerCenter","centerLeft","centerRight","topCenter","topLeft","topRight","leftToRight","rightToLeft","DEFAULT_TASK_ID","SPINNER_CONFIG","ball-scale-multiple","divs","class","ball-spin","ball-spin-clockwise","ball-spin-clockwise-fade-rotating","ball-spin-fade-rotating","chasing-dots","cube-grid","double-bounce","fading-circle","folding-cube","rectangle-bounce","rectangle-bounce-party","rectangle-bounce-pulse-out","rectangle-bounce-pulse-out-rapid","rotating-plane","square-jelly-box","square-loader","three-bounce","three-strings","wandering-cubes","DEFAULT_CONFIG","bgsColor","bgsOpacity","bgsPosition","POSITION","bgsSize","bgsType","SPINNER","blur","fgsColor","fgsPosition","fgsSize","fgsType","gap","logoPosition","logoSize","logoUrl","masterLoaderId","overlayBorderRadius","overlayColor","pbColor","pbDirection","PB_DIRECTION","pbThickness","hasProgressBar","text","textColor","textPosition","threshold","NGX_UI_LOADER_CONFIG_TOKEN","InjectionToken","NgxUiLoaderService","config","defaultConfig","loaders","showForeground","BehaviorSubject","loaderId","isShow","showForeground$","asObservable","showBackground","showBackground$","fgClosing","foregroundClosing$","bgClosing","backgroundClosing$","initLoaderData","isMaster","throwErrorIfMasterLoaderExists","throwErrorIfLoaderExists","isBound","hasForeground","next","hasBackground","createLoaderData","updateLoaderId","newLoaderId","throwErrorIfLoaderNotExist","background","foreground","console","warn","destroyLoaderData","stopLoaderAll","getDefaultConfig","getLoaders","JSON","parse","stringify","getLoader","throwErrorIfMasterLoaderNotExist","getStatus","waitingBackground","waitingForeground","taskId","keys","startLoader","undefined","foregroundRunning","Date","now","backgroundCloseout","start","startBackgroundLoader","startBackground","stopLoader","_this","setTimeout","foregroundCloseout","stop","stopBackgroundLoader","stopBackground","stopAll","Error","useIsBoundProp","Injectable","args","providedIn","Optional","type","Inject","coerceNumber","value","fallbackValue","isNaN","parseFloat","Number","NgxUiLoaderComponent","domSanitizer","changeDetectorRef","ngxService","initialized","ngOnInit","initializeSpinners","determinePositions","validate","trustedLogoUrl","bypassSecurityTrustResourceUrl","showForegroundWatcher","pipe","filter","showEvent","subscribe","data","markForCheck","showBackgroundWatcher","foregroundClosingWatcher","foregroundClosing","backgroundClosingWatcher","backgroundClosing","ngOnChanges","changes","bgsTypeChange","bgsPositionChange","fgsTypeChange","loaderIdChange","logoUrlChange","pbDirectionChange","previousValue","fgDivs","Array","fill","fgSpinnerClass","bgDivs","bgSpinnerClass","logoTop","spinnerTop","textTop","startsWith","bypassSecurityTrustStyle","inputName","validTypeObj","map","k","findIndex","v","error","ngOnDestroy","unsubscribe","Component","selector","template","changeDetection","ChangeDetectionStrategy","OnPush","DomSanitizer","ChangeDetectorRef","Input","NgxUiLoaderBlurredDirective","elementRef","renderer","ngxUiLoaderService","blurNumber","defineProperty","filterValue","setStyle","nativeElement","Directive","ElementRef","Renderer2","NgxUiLoaderModule","forRoot","ngxUiLoaderConfig","ngModule","providers","provide","useValue","NgModule","imports","CommonModule","declarations","exports","NGX_UI_LOADER_ROUTER_CONFIG_TOKEN","ROUTER_LOADER_ID","NgxUiLoaderRouterModule","parentModule","router","events","event","NavigationStart","NavigationEnd","NavigationCancel","NavigationError","routerConfig","decorators","SkipSelf","Router","NGX_UI_LOADER_HTTP_CONFIG_TOKEN","HTTP_LOADER_ID","NgxUiLoaderHttpInterceptor","count","exclude","url","toLowerCase","excludeRegexp","regexp","RegExp","intercept","req","isIgnored","handle","finalize","str","test","NgxUiLoaderHttpModule","httpConfig","HTTP_INTERCEPTORS","useClass","multi"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/**\r\n * Available spinner types\r\n */\r\nexport enum SPINNER {\r\n  ballScaleMultiple = 'ball-scale-multiple',\r\n  ballSpin = 'ball-spin',\r\n  ballSpinClockwise = 'ball-spin-clockwise',\r\n  ballSpinClockwiseFadeRotating = 'ball-spin-clockwise-fade-rotating',\r\n  ballSpinFadeRotating = 'ball-spin-fade-rotating',\r\n  chasingDots = 'chasing-dots',\r\n  circle = 'circle',\r\n  cubeGrid = 'cube-grid',\r\n  doubleBounce = 'double-bounce',\r\n  fadingCircle = 'fading-circle',\r\n  foldingCube = 'folding-cube',\r\n  pulse = 'pulse',\r\n  rectangleBounce = 'rectangle-bounce',\r\n  rectangleBounceParty = 'rectangle-bounce-party',\r\n  rectangleBouncePulseOut = 'rectangle-bounce-pulse-out',\r\n  rectangleBouncePulseOutRapid = 'rectangle-bounce-pulse-out-rapid',\r\n  rotatingPlane = 'rotating-plane',\r\n  squareJellyBox = 'square-jelly-box',\r\n  squareLoader = 'square-loader',\r\n  threeBounce = 'three-bounce',\r\n  threeStrings = 'three-strings',\r\n  wanderingCubes = 'wandering-cubes',\r\n}\r\n\r\n/**\r\n * Available postions\r\n */\r\nexport enum POSITION {\r\n  bottomCenter = 'bottom-center',\r\n  bottomLeft = 'bottom-left',\r\n  bottomRight = 'bottom-right',\r\n  centerCenter = 'center-center',\r\n  centerLeft = 'center-left',\r\n  centerRight = 'center-right',\r\n  topCenter = 'top-center',\r\n  topLeft = 'top-left',\r\n  topRight = 'top-right'\r\n}\r\n\r\n/**\r\n * Progress bar directions\r\n */\r\nexport enum PB_DIRECTION {\r\n  leftToRight = 'ltr',\r\n  rightToLeft = 'rtl'\r\n}\r\n","import { NgxUiLoaderConfig } from './ngx-ui-loader-config';\r\nimport { POSITION, PB_DIRECTION, SPINNER } from './ngx-ui-loader.enums';\r\n\r\n/**\r\n * The default value of task id\r\n */\r\nexport const DEFAULT_TASK_ID = 'default';\r\n\r\n/**\r\n * The default value of loader id\r\n */\r\nexport const DEFAULT_MASTER_LOADER_ID = 'master';\r\n\r\nexport const CLOSING_TIME = 501;\r\n\r\nexport const WAITING_FOR_OVERLAY_DISAPPEAR = 200;\r\n\r\n/**\r\n * The configuration of spinners\r\n */\r\nexport const SPINNER_CONFIG = {\r\n  'ball-scale-multiple': {\r\n    divs: 3,\r\n    class: 'sk-ball-scale-multiple'\r\n  },\r\n  'ball-spin': {\r\n    divs: 8,\r\n    class: 'sk-ball-spin'\r\n  },\r\n  'ball-spin-clockwise': {\r\n    divs: 8,\r\n    class: 'sk-ball-spin-clockwise'\r\n  },\r\n  'ball-spin-clockwise-fade-rotating': {\r\n    divs: 8,\r\n    class: 'sk-ball-spin-clockwise-fade-rotating'\r\n  },\r\n  'ball-spin-fade-rotating': {\r\n    divs: 8,\r\n    class: 'sk-ball-spin-fade-rotating'\r\n  },\r\n  'chasing-dots': {\r\n    divs: 2,\r\n    class: 'sk-chasing-dots'\r\n  },\r\n  'circle': {\r\n    divs: 12,\r\n    class: 'sk-circle'\r\n  },\r\n  'cube-grid': {\r\n    divs: 9,\r\n    class: 'sk-cube-grid'\r\n  },\r\n  'double-bounce': {\r\n    divs: 2,\r\n    class: 'sk-double-bounce'\r\n  },\r\n  'fading-circle': {\r\n    divs: 12,\r\n    class: 'sk-fading-circle'\r\n  },\r\n  'folding-cube': {\r\n    divs: 4,\r\n    class: 'sk-folding-cube'\r\n  },\r\n  'pulse':  {\r\n    divs: 1,\r\n    class: 'sk-pulse'\r\n  },\r\n  'rectangle-bounce': {\r\n    divs: 5,\r\n    class: 'sk-rectangle-bounce'\r\n  },\r\n  'rectangle-bounce-party': {\r\n    divs: 5,\r\n    class: 'sk-rectangle-bounce-party'\r\n  },\r\n  'rectangle-bounce-pulse-out': {\r\n    divs: 5,\r\n    class: 'sk-rectangle-bounce-pulse-out'\r\n  },\r\n  'rectangle-bounce-pulse-out-rapid': {\r\n    divs: 5,\r\n    class: 'sk-rectangle-bounce-pulse-out-rapid'\r\n  },\r\n  'rotating-plane': {\r\n    divs: 1,\r\n    class: 'sk-rotating-plane'\r\n  },\r\n  'square-jelly-box': {\r\n    divs: 2,\r\n    class: 'sk-square-jelly-box'\r\n  },\r\n  'square-loader': {\r\n    divs: 1,\r\n    class: 'sk-square-loader'\r\n  },\r\n  'three-bounce': {\r\n    divs: 3,\r\n    class: 'sk-three-bounce'\r\n  },\r\n  'three-strings': {\r\n    divs: 3,\r\n    class: 'sk-three-strings'\r\n  },\r\n  'wandering-cubes': {\r\n    divs: 2,\r\n    class: 'sk-wandering-cubes'\r\n  },\r\n};\r\n\r\n/**\r\n * The default configuration of ngx-ui-loader\r\n */\r\nexport const DEFAULT_CONFIG: NgxUiLoaderConfig = {\r\n  bgsColor: '#00ACC1',\r\n  bgsOpacity: 0.5,\r\n  bgsPosition: POSITION.bottomRight,\r\n  bgsSize: 60,\r\n  bgsType: SPINNER.ballSpinClockwise,\r\n  blur: 5,\r\n  fgsColor: '#00ACC1',\r\n  fgsPosition: POSITION.centerCenter,\r\n  fgsSize: 60,\r\n  fgsType: SPINNER.ballSpinClockwise,\r\n  gap: 24,\r\n  logoPosition: POSITION.centerCenter,\r\n  logoSize: 120,\r\n  logoUrl: '',\r\n  masterLoaderId: DEFAULT_MASTER_LOADER_ID,\r\n  overlayBorderRadius: '0',\r\n  overlayColor: 'rgba(40, 40, 40, 0.8)',\r\n  pbColor: '#00ACC1',\r\n  pbDirection: PB_DIRECTION.leftToRight,\r\n  pbThickness: 3,\r\n  hasProgressBar: true,\r\n  text: '',\r\n  textColor: '#FFFFFF',\r\n  textPosition: POSITION.centerCenter,\r\n  threshold: 500\r\n};\r\n","import { InjectionToken } from '@angular/core';\r\nimport { NgxUiLoaderConfig } from './ngx-ui-loader-config';\r\n\r\n/**\r\n * Injection token for ngx-ui-loader configuration\r\n */\r\nexport const NGX_UI_LOADER_CONFIG_TOKEN = new InjectionToken<NgxUiLoaderConfig>('ngxUiLoaderCustom.config');\r\n","import { Inject, Injectable, Optional } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\n\r\nimport { CLOSING_TIME, DEFAULT_TASK_ID, DEFAULT_CONFIG, WAITING_FOR_OVERLAY_DISAPPEAR } from './ngx-ui-loader.contants';\r\nimport { NGX_UI_LOADER_CONFIG_TOKEN } from './ngx-ui-loader-config.token';\r\nimport { NgxUiLoaderConfig } from './ngx-ui-loader-config';\r\nimport { Loaders, Loader, ShowEvent, Task } from './ngx-ui-loader.interfaces';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NgxUiLoaderService {\r\n\r\n  // Public properties\r\n\r\n  /**\r\n   * For internal use only. It may be changed in the future.\r\n   * @docs-private\r\n   */\r\n  backgroundClosing$: Observable<ShowEvent>;\r\n\r\n  /**\r\n   * For internal use only. It may be changed in the future.\r\n   * @docs-private\r\n   */\r\n  foregroundClosing$: Observable<ShowEvent>;\r\n\r\n  /**\r\n   * For internal use only. It may be changed in the future.\r\n   * @docs-private\r\n   */\r\n  showBackground$: Observable<ShowEvent>;\r\n\r\n  /**\r\n   * For internal use only. It may be changed in the future.\r\n   * @docs-private\r\n   */\r\n  showForeground$: Observable<ShowEvent>;\r\n\r\n  // Private properties\r\n  private bgClosing: BehaviorSubject<ShowEvent>;\r\n  private defaultConfig: NgxUiLoaderConfig;\r\n  private fgClosing: BehaviorSubject<ShowEvent>;\r\n  private loaders: Loaders;\r\n  private showBackground: BehaviorSubject<ShowEvent>;\r\n  private showForeground: BehaviorSubject<ShowEvent>;\r\n\r\n  /**\r\n   * Constructor\r\n   * @param config\r\n   */\r\n  constructor(@Optional() @Inject(NGX_UI_LOADER_CONFIG_TOKEN) private config: NgxUiLoaderConfig) {\r\n\r\n    this.defaultConfig = { ...DEFAULT_CONFIG };\r\n\r\n    if (this.config) {\r\n      if (this.config.threshold && this.config.threshold <= 0) {\r\n        this.config.threshold = DEFAULT_CONFIG.threshold;\r\n      }\r\n      this.defaultConfig = { ...this.defaultConfig, ...this.config };\r\n    }\r\n\r\n    this.loaders = {};\r\n    this.showForeground = new BehaviorSubject<ShowEvent>({ loaderId: '', isShow: false });\r\n    this.showForeground$ = this.showForeground.asObservable();\r\n    this.showBackground = new BehaviorSubject<ShowEvent>({ loaderId: '', isShow: false });\r\n    this.showBackground$ = this.showBackground.asObservable();\r\n    this.fgClosing = new BehaviorSubject<ShowEvent>({ loaderId: '', isShow: false });\r\n    this.foregroundClosing$ = this.fgClosing.asObservable();\r\n    this.bgClosing = new BehaviorSubject<ShowEvent>({ loaderId: '', isShow: false });\r\n    this.backgroundClosing$ = this.bgClosing.asObservable();\r\n  }\r\n\r\n  /**\r\n   * For internal use only. It may be changed in the future.\r\n   * @docs-private\r\n   */\r\n  initLoaderData(loaderId: string): void {\r\n    let isMaster = false;\r\n    if (loaderId === this.defaultConfig.masterLoaderId) {\r\n      this.throwErrorIfMasterLoaderExists(true);\r\n      isMaster = true;\r\n    } else { // not master loader\r\n      this.throwErrorIfLoaderExists(loaderId, true);\r\n    }\r\n    if (this.loaders[loaderId]) {\r\n      this.loaders[loaderId].isBound = true;\r\n      this.loaders[loaderId].isMaster = isMaster;\r\n      // emit showEvent after data loader is bound\r\n      if (this.hasForeground(loaderId)) {\r\n        this.showForeground.next({ loaderId, isShow: true });\r\n      } else {\r\n        if (this.hasBackground(loaderId)) {\r\n          this.showBackground.next({ loaderId, isShow: true });\r\n        }\r\n      }\r\n    } else {\r\n      this.createLoaderData(loaderId, isMaster, true);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * For internal use only. It may be changed in the future.\r\n   * @docs-private\r\n   */\r\n  updateLoaderId(loaderId: string, newLoaderId: string): void {\r\n    this.throwErrorIfLoaderNotExist(loaderId);\r\n    if (this.loaders[loaderId].loaderId === this.defaultConfig.masterLoaderId) {\r\n      console.warn(`[ngx-ui-loader] - Cannot change loaderId of master loader. The current ` +\r\n        `master's loaderId is \"${this.defaultConfig.masterLoaderId}\". If you really want to ` +\r\n        `change it, please use NgxUiLoaderModule.forRoot() method.`);\r\n      return;\r\n    }\r\n    if (newLoaderId !== loaderId) {\r\n      this.throwErrorIfLoaderExists(newLoaderId, true);\r\n      this.loaders[newLoaderId] = {\r\n        loaderId: newLoaderId,\r\n        background: { ...this.loaders[loaderId].background },\r\n        foreground: { ...this.loaders[loaderId].foreground },\r\n        isMaster: false,\r\n        isBound: this.loaders[loaderId].isBound\r\n      };\r\n      delete this.loaders[loaderId];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * For internal use only. It may be changed in the future.\r\n   * @docs-private\r\n   */\r\n  destroyLoaderData(loaderId: string): void {\r\n    this.stopLoaderAll(loaderId);\r\n    delete this.loaders[loaderId];\r\n  }\r\n\r\n  /**\r\n   * Get default loader configuration\r\n   * @returns default configuration object\r\n   */\r\n  getDefaultConfig(): NgxUiLoaderConfig {\r\n    return { ...this.defaultConfig };\r\n  }\r\n\r\n  /**\r\n   * Get all the loaders\r\n   */\r\n  getLoaders(): Loaders {\r\n    return JSON.parse(JSON.stringify(this.loaders));\r\n  }\r\n\r\n  /**\r\n   * Get data of a specified loader. If loaderId is not provided, it will return data of master loader(if existed)\r\n   */\r\n  getLoader(loaderId?: string): Loader {\r\n    if (loaderId) {\r\n      this.throwErrorIfLoaderNotExist(loaderId);\r\n    } else {\r\n      this.throwErrorIfMasterLoaderNotExist();\r\n      loaderId = this.defaultConfig.masterLoaderId;\r\n    }\r\n    return JSON.parse(JSON.stringify(this.loaders[loaderId]));\r\n  }\r\n\r\n  /**\r\n   * @deprecated use getLoader() or getLoaders() instead. This will be removed in the version 8.x.x\r\n   * Return status of master loader\r\n   */\r\n  getStatus(): { waitingBackground: Task, waitingForeground: Task } {\r\n    this.throwErrorIfMasterLoaderNotExist();\r\n    return {\r\n      waitingBackground: this.loaders[this.defaultConfig.masterLoaderId].background,\r\n      waitingForeground: this.loaders[this.defaultConfig.masterLoaderId].foreground\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Check whether the queue has a waiting foreground loader with the given `taskId`.\r\n   * If no `taskId` specified, it will check whether the queue has any waiting foreground loader.\r\n   * @param loaderId the loader Id\r\n   * @param taskId the optional task Id\r\n   * @returns boolean\r\n   */\r\n  hasForeground(loaderId: string, taskId?: string): boolean {\r\n    if (this.loaders[loaderId]) {\r\n      if (taskId) {\r\n        return this.loaders[loaderId].foreground[taskId] ? true : false;\r\n      }\r\n      return Object.keys(this.loaders[loaderId].foreground).length > 0;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Check whether the queue has a waiting background loader with the given `taskId`.\r\n   * If no `taskId` specified, it will check whether the queue has any waiting background loader.\r\n   * @param loaderId the loader Id\r\n   * @param taskId the optional task Id\r\n   * @returns boolean\r\n   */\r\n  hasBackground(loaderId: string, taskId?: string): boolean {\r\n    if (this.loaders[loaderId]) {\r\n      if (taskId) {\r\n        return this.loaders[loaderId].background[taskId] ? true : false;\r\n      }\r\n      return Object.keys(this.loaders[loaderId].background).length > 0;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Start the foreground loading of loader having `loaderId` with a specified `taskId`.\r\n   * The loading is only closed off when all taskIds of that loader are called with stopLoader() method.\r\n   * @param loaderId the loader Id\r\n   * @param taskId the optional task Id of the loading. taskId is set to 'default' by default.\r\n   */\r\n  startLoader(loaderId: string, taskId: string = DEFAULT_TASK_ID): void {\r\n    this.createLoaderData(loaderId, undefined, false);\r\n\r\n    const foregroundRunning = this.hasForeground(loaderId);\r\n    this.loaders[loaderId].foreground[taskId] = Date.now();\r\n\r\n    if (!this.loaders[loaderId].isBound) {\r\n      return;\r\n    }\r\n\r\n    if (!foregroundRunning) {\r\n      if (this.hasBackground(loaderId)) {\r\n        this.backgroundCloseout(loaderId);\r\n        this.showBackground.next({ loaderId, isShow: false });\r\n      }\r\n      this.showForeground.next({ loaderId, isShow: true });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Start the foreground loading of master loader with a specified `taskId`.\r\n   * The loading is only closed off when all taskIds of that loader are called with stop() method.\r\n   * NOTE: Really this function just wraps startLoader() function\r\n   * @param taskId the optional task Id of the loading. taskId is set to 'default' by default.\r\n   */\r\n  start(taskId: string = DEFAULT_TASK_ID): void {\r\n    this.startLoader(this.defaultConfig.masterLoaderId, taskId);\r\n  }\r\n\r\n  /**\r\n   * Start the background loading of loader having `loaderId` with a specified `taskId`.\r\n   * The loading is only closed off when all taskIds of that loader are called with stopLoaderBackground() method.\r\n   * @param loaderId the loader Id\r\n   * @param taskId the optional task Id of the loading. taskId is set to 'default' by default.\r\n   */\r\n  startBackgroundLoader(loaderId: string, taskId: string = DEFAULT_TASK_ID): void {\r\n    this.createLoaderData(loaderId, undefined, false);\r\n\r\n    this.loaders[loaderId].background[taskId] = Date.now();\r\n\r\n    if (!this.loaders[loaderId].isBound) {\r\n      return;\r\n    }\r\n\r\n    if (!this.hasForeground(loaderId)) {\r\n      this.showBackground.next({ loaderId, isShow: true });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Start the background loading of master loader with a specified `taskId`.\r\n   * The loading is only closed off when all taskIds of that loader are called with stopBackground() method.\r\n   * NOTE: Really this function just wraps startBackgroundLoader() function\r\n   * @param taskId the optional task Id of the loading. taskId is set to 'default' by default.\r\n   */\r\n  startBackground(taskId: string = DEFAULT_TASK_ID): void {\r\n    this.startBackgroundLoader(this.defaultConfig.masterLoaderId, taskId);\r\n  }\r\n\r\n  /**\r\n   * Stop a foreground loading of loader having `loaderId` with specific `taskId`\r\n   * @param loaderId the loader Id\r\n   * @param taskId the optional task Id to stop. If not provided, 'default' is used.\r\n   * @returns Object\r\n   */\r\n  stopLoader(loaderId: string, taskId: string = DEFAULT_TASK_ID): void {\r\n    this.throwErrorIfLoaderNotExist(loaderId);\r\n\r\n    // Update loader data {{{\r\n    const now = Date.now();\r\n    if (this.hasForeground(loaderId, taskId)) {\r\n      if (this.loaders[loaderId].foreground[taskId] + this.defaultConfig.threshold > now) {\r\n        setTimeout(() => {\r\n          this.stopLoader(loaderId, taskId);\r\n        }, this.loaders[loaderId].foreground[taskId] + this.defaultConfig.threshold - now);\r\n        return;\r\n      }\r\n      delete this.loaders[loaderId].foreground[taskId];\r\n    } else {\r\n      return;\r\n    }\r\n    // }}}\r\n\r\n    // Emit ShowEvents to update view {{{\r\n    if (!this.hasForeground(loaderId)) {\r\n      this.foregroundCloseout(loaderId);\r\n      this.showForeground.next({ loaderId, isShow: false });\r\n      if (this.hasBackground(loaderId)) {\r\n        setTimeout(() => {\r\n          if (this.hasBackground(loaderId)) { // still have background tasks\r\n            this.showBackground.next({ loaderId, isShow: true });\r\n          }\r\n        }, WAITING_FOR_OVERLAY_DISAPPEAR);\r\n      }\r\n    }\r\n    // }}}\r\n  }\r\n\r\n  /**\r\n   * Stop a foreground loading of master loader with specific `taskId`\r\n   * @param taskId the optional task Id to stop. If not provided, 'default' is used.\r\n   * @returns Object\r\n   */\r\n  stop(taskId: string = DEFAULT_TASK_ID): void {\r\n    this.stopLoader(this.defaultConfig.masterLoaderId, taskId);\r\n  }\r\n\r\n  /**\r\n   * Stop a background loading of loader having `loaderId` with specific `taskId`\r\n   * @param loaderId the loader Id\r\n   * @param taskId the optional task Id to stop. If not provided, 'default' is used.\r\n   * @returns Object\r\n   */\r\n  stopBackgroundLoader(loaderId: string, taskId: string = DEFAULT_TASK_ID): void {\r\n    this.throwErrorIfLoaderNotExist(loaderId);\r\n\r\n    // Update loader data {{{\r\n    const now = Date.now();\r\n    if (this.hasBackground(loaderId, taskId)) {\r\n      if (this.loaders[loaderId].background[taskId] + this.defaultConfig.threshold > now) {\r\n        setTimeout(() => {\r\n          this.stopBackgroundLoader(loaderId, taskId);\r\n        }, this.loaders[loaderId].background[taskId] + this.defaultConfig.threshold - now);\r\n        return;\r\n      }\r\n      delete this.loaders[loaderId].background[taskId];\r\n    } else {\r\n      return;\r\n    }\r\n    // }}}\r\n\r\n    // Emit ShowEvents to update view {{{\r\n    if (!this.hasForeground(loaderId) && !this.hasBackground(loaderId)) {\r\n      this.backgroundCloseout(loaderId);\r\n      this.showBackground.next({ loaderId, isShow: false });\r\n    }\r\n    // }}}\r\n  }\r\n\r\n  /**\r\n   * Stop a background loading of master loader with specific taskId\r\n   * @param taskId the optional task Id to stop. If not provided, 'default' is used.\r\n   * @returns Object\r\n   */\r\n  stopBackground(taskId: string = DEFAULT_TASK_ID): void {\r\n    this.stopBackgroundLoader(this.defaultConfig.masterLoaderId, taskId);\r\n  }\r\n\r\n  /**\r\n   * Stop all the background and foreground loadings of loader having `loaderId`\r\n   * @param loaderId the loader Id\r\n   */\r\n  stopLoaderAll(loaderId: string): void {\r\n    this.throwErrorIfLoaderNotExist(loaderId);\r\n\r\n    if (this.hasForeground(loaderId)) {\r\n      this.foregroundCloseout(loaderId);\r\n      this.showForeground.next({ loaderId, isShow: false });\r\n    } else if (this.hasBackground(loaderId)) {\r\n      this.backgroundCloseout(loaderId);\r\n      this.showBackground.next({ loaderId, isShow: false });\r\n    }\r\n    this.loaders[loaderId].foreground = {};\r\n    this.loaders[loaderId].background = {};\r\n  }\r\n\r\n  /**\r\n   * Stop all the background and foreground loadings of master loader\r\n   */\r\n  stopAll(): void {\r\n    this.stopLoaderAll(this.defaultConfig.masterLoaderId);\r\n  }\r\n\r\n  /**\r\n   * Create loader data if it does not exist\r\n   * @param loaderId\r\n   * @param isMaster\r\n   * @param isBound\r\n   * @docs-private\r\n   */\r\n  private createLoaderData(loaderId: string, isMaster: boolean, isBound: boolean): void {\r\n    if (!this.loaders[loaderId]) {\r\n      this.loaders[loaderId] = {\r\n        loaderId,\r\n        foreground: {},\r\n        background: {},\r\n        isMaster,\r\n        isBound\r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Throw error if the loaderId does not exist.\r\n   * @docs-private\r\n   */\r\n  private throwErrorIfLoaderNotExist(loaderId: string): void {\r\n    if (!this.loaders[loaderId]) {\r\n      throw new Error(`[ngx-ui-loader] - loaderId \"${loaderId}\" does not exist.`);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Throw error if the loaderId has already existed.\r\n   * @docs-private\r\n   */\r\n  private throwErrorIfLoaderExists(loaderId: string, useIsBoundProp?: boolean): void {\r\n    if (this.loaders[loaderId] && (this.loaders[loaderId].isBound && useIsBoundProp)) {\r\n      throw new Error(`[ngx-ui-loader] - loaderId \"${loaderId}\" is duplicated. Please choose another one!`);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Throw error if the master loader has already existed.\r\n   * @docs-private\r\n   */\r\n  private throwErrorIfMasterLoaderExists(useIsBoundProp?: boolean): void {\r\n    if (this.loaders[this.defaultConfig.masterLoaderId] && (this.loaders[this.defaultConfig.masterLoaderId].isBound && useIsBoundProp)) {\r\n      throw new Error(`[ngx-ui-loader] - The master loader has already existed. `\r\n        + `The app should have only one master loader and it should be placed in the root app template`);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Throw error if the master loader does not exist.\r\n   * @docs-private\r\n   */\r\n  private throwErrorIfMasterLoaderNotExist(): void {\r\n    if (!this.loaders[this.defaultConfig.masterLoaderId]) {\r\n      throw new Error(`[ngx-ui-loader] - The master loader does not exist.`);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Manage to close foreground loading\r\n   * @param loaderId the loader id\r\n   */\r\n  private foregroundCloseout(loaderId: string): void {\r\n    this.fgClosing.next({ loaderId, isShow: true });\r\n    setTimeout(() => {\r\n      this.fgClosing.next({ loaderId, isShow: false });\r\n    }, CLOSING_TIME);\r\n  }\r\n\r\n  /**\r\n   * Manage to close background loading\r\n   * @param loaderId the loader id\r\n   */\r\n  private backgroundCloseout(loaderId: string): void {\r\n    this.bgClosing.next({ loaderId, isShow: true });\r\n    setTimeout(() => {\r\n      this.bgClosing.next({ loaderId, isShow: false });\r\n    }, CLOSING_TIME);\r\n  }\r\n}\r\n","/**\r\n * Coerce a value (string) to a number\r\n * @param value\r\n * @param fallbackValue\r\n */\r\nexport function coerceNumber(value, fallbackValue): number {\r\n  return !isNaN(parseFloat(value as any)) && !isNaN(Number(value)) ? Number(value) : fallbackValue;\r\n}\r\n","import { Component, Input, OnInit, OnChanges, SimpleChanges, SimpleChange,\r\n  OnDestroy, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\r\nimport { DomSanitizer, SafeResourceUrl, SafeStyle } from '@angular/platform-browser';\r\nimport { NgxUiLoaderService } from './ngx-ui-loader.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { filter } from 'rxjs/operators';\r\n\r\nimport { NgxUiLoaderConfig } from './ngx-ui-loader-config';\r\nimport { DirectionType, PositionType, SpinnerType } from './ngx-ui-loader.types';\r\nimport { POSITION, PB_DIRECTION, SPINNER } from './ngx-ui-loader.enums';\r\nimport { SPINNER_CONFIG } from './ngx-ui-loader.contants';\r\nimport { ShowEvent } from './ngx-ui-loader.interfaces';\r\nimport { coerceNumber } from './coercion';\r\n\r\n@Component({\r\n  selector: 'ngx-ui-loader',\r\n  templateUrl: './ngx-ui-loader.component.html',\r\n  styleUrls: ['./ngx-ui-loader.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class NgxUiLoaderComponent implements OnChanges, OnDestroy, OnInit {\r\n\r\n  @Input() bgsColor: string;\r\n  @Input() bgsOpacity: number;\r\n  @Input() bgsPosition: PositionType;\r\n  @Input() bgsSize: number;\r\n  @Input() bgsType: SpinnerType;\r\n  @Input() fgsColor: string;\r\n  @Input() fgsPosition: PositionType;\r\n  @Input() fgsSize: number;\r\n  @Input() fgsType: SpinnerType;\r\n  @Input() gap: number;\r\n  @Input() loaderId: string;\r\n  @Input() logoPosition: PositionType;\r\n  @Input() logoSize: number;\r\n  @Input() logoUrl: string;\r\n  @Input() overlayBorderRadius: string;\r\n  @Input() overlayColor: string;\r\n  @Input() pbColor: string;\r\n  @Input() pbDirection: DirectionType;\r\n  @Input() pbThickness: number;\r\n  @Input() hasProgressBar: boolean;\r\n  @Input() text: string;\r\n  @Input() textColor: string;\r\n  @Input() textPosition: PositionType;\r\n\r\n  fgDivs: number[];\r\n  fgSpinnerClass: string;\r\n  bgDivs: number[];\r\n  bgSpinnerClass: string;\r\n  showForeground: boolean;\r\n  showBackground: boolean;\r\n  foregroundClosing: boolean;\r\n  backgroundClosing: boolean;\r\n\r\n  trustedLogoUrl: SafeResourceUrl;\r\n  logoTop: SafeStyle;\r\n  spinnerTop: SafeStyle;\r\n  textTop: SafeStyle;\r\n\r\n  showForegroundWatcher: Subscription;\r\n  showBackgroundWatcher: Subscription;\r\n  foregroundClosingWatcher: Subscription;\r\n  backgroundClosingWatcher: Subscription;\r\n\r\n  defaultConfig: NgxUiLoaderConfig;\r\n  initialized: boolean;\r\n\r\n  /**\r\n   * Constructor\r\n   * @param domSanitizer\r\n   * @param ngxService\r\n   */\r\n  constructor(\r\n    private domSanitizer: DomSanitizer,\r\n    private changeDetectorRef: ChangeDetectorRef,\r\n    private ngxService: NgxUiLoaderService) {\r\n\r\n    this.initialized = false;\r\n    this.defaultConfig = this.ngxService.getDefaultConfig();\r\n\r\n    this.bgsColor = this.defaultConfig.bgsColor;\r\n    this.bgsOpacity = this.defaultConfig.bgsOpacity;\r\n    this.bgsPosition = this.defaultConfig.bgsPosition;\r\n    this.bgsSize = this.defaultConfig.bgsSize;\r\n    this.bgsType = this.defaultConfig.bgsType;\r\n    this.fgsColor = this.defaultConfig.fgsColor;\r\n    this.fgsPosition = this.defaultConfig.fgsPosition;\r\n    this.fgsSize = this.defaultConfig.fgsSize;\r\n    this.fgsType = this.defaultConfig.fgsType;\r\n    this.gap = this.defaultConfig.gap;\r\n    this.loaderId = this.defaultConfig.masterLoaderId;\r\n    this.logoPosition = this.defaultConfig.logoPosition;\r\n    this.logoSize = this.defaultConfig.logoSize;\r\n    this.logoUrl = this.defaultConfig.logoUrl;\r\n    this.overlayBorderRadius = this.defaultConfig.overlayBorderRadius;\r\n    this.overlayColor = this.defaultConfig.overlayColor;\r\n    this.pbColor = this.defaultConfig.pbColor;\r\n    this.pbDirection = this.defaultConfig.pbDirection;\r\n    this.pbThickness = this.defaultConfig.pbThickness;\r\n    this.hasProgressBar = this.defaultConfig.hasProgressBar;\r\n    this.text = this.defaultConfig.text;\r\n    this.textColor = this.defaultConfig.textColor;\r\n    this.textPosition = this.defaultConfig.textPosition;\r\n  }\r\n\r\n  /**\r\n   * On init event\r\n   */\r\n  ngOnInit() {\r\n    this.initializeSpinners();\r\n    this.ngxService.initLoaderData(this.loaderId);\r\n    this.determinePositions();\r\n\r\n    this.bgsPosition = <PositionType>this.validate('bgsPosition', this.bgsPosition, POSITION, this.defaultConfig.bgsPosition);\r\n\r\n    this.trustedLogoUrl = this.domSanitizer.bypassSecurityTrustResourceUrl(this.logoUrl);\r\n\r\n    this.pbDirection = <DirectionType>this.validate('pbDirection', this.pbDirection, PB_DIRECTION, this.defaultConfig.pbDirection);\r\n\r\n    this.showForegroundWatcher = this.ngxService.showForeground$\r\n      .pipe(filter((showEvent: ShowEvent) => this.loaderId === showEvent.loaderId))\r\n      .subscribe(data => {\r\n        this.showForeground = data.isShow;\r\n        this.changeDetectorRef.markForCheck();\r\n      });\r\n\r\n    this.showBackgroundWatcher = this.ngxService.showBackground$\r\n      .pipe(filter((showEvent: ShowEvent) => this.loaderId === showEvent.loaderId))\r\n      .subscribe(data => {\r\n        this.showBackground = data.isShow;\r\n        this.changeDetectorRef.markForCheck();\r\n      });\r\n\r\n    this.foregroundClosingWatcher = this.ngxService.foregroundClosing$\r\n      .pipe(filter((showEvent: ShowEvent) => this.loaderId === showEvent.loaderId))\r\n      .subscribe(data => {\r\n        this.foregroundClosing = data.isShow;\r\n        this.changeDetectorRef.markForCheck();\r\n      });\r\n\r\n    this.backgroundClosingWatcher = this.ngxService.backgroundClosing$\r\n      .pipe(filter((showEvent: ShowEvent) => this.loaderId === showEvent.loaderId))\r\n      .subscribe(data => {\r\n        this.backgroundClosing = data.isShow;\r\n        this.changeDetectorRef.markForCheck();\r\n      });\r\n    this.initialized = true;\r\n  }\r\n\r\n  /**\r\n   * On changes event\r\n   * @param changes\r\n   */\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (!this.initialized) {\r\n      return;\r\n    }\r\n\r\n    const bgsTypeChange: SimpleChange = changes.bgsType;\r\n    const bgsPositionChange: SimpleChange = changes.bgsPosition;\r\n    const fgsTypeChange: SimpleChange = changes.fgsType;\r\n    const loaderIdChange: SimpleChange = changes.loaderId;\r\n    const logoUrlChange: SimpleChange = changes.logoUrl;\r\n    const pbDirectionChange: SimpleChange = changes.pbDirection;\r\n\r\n    if (fgsTypeChange || bgsTypeChange) {\r\n      this.initializeSpinners();\r\n    }\r\n\r\n    if (loaderIdChange) {\r\n      this.ngxService.updateLoaderId(loaderIdChange.previousValue, this.loaderId);\r\n    }\r\n\r\n    this.determinePositions();\r\n\r\n    if (bgsPositionChange) {\r\n      this.bgsPosition = <PositionType>this.validate('bgsPosition', this.bgsPosition, POSITION, this.defaultConfig.bgsPosition);\r\n    }\r\n\r\n    if (logoUrlChange) {\r\n      this.trustedLogoUrl = this.domSanitizer.bypassSecurityTrustResourceUrl(this.logoUrl);\r\n    }\r\n\r\n    if (pbDirectionChange) {\r\n      this.pbDirection = <DirectionType>this.validate('pbDirection', this.pbDirection, PB_DIRECTION, this.defaultConfig.pbDirection);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Initialize spinners\r\n   */\r\n  private initializeSpinners(): void {\r\n    this.fgsType = <SpinnerType>this.validate('fgsType', this.fgsType, SPINNER, this.defaultConfig.fgsType);\r\n    this.bgsType = <SpinnerType>this.validate('bgsType', this.bgsType, SPINNER, this.defaultConfig.bgsType);\r\n\r\n    this.fgDivs = Array(SPINNER_CONFIG[this.fgsType].divs).fill(1);\r\n    this.fgSpinnerClass = SPINNER_CONFIG[this.fgsType].class;\r\n    this.bgDivs = Array(SPINNER_CONFIG[this.bgsType].divs).fill(1);\r\n    this.bgSpinnerClass = SPINNER_CONFIG[this.bgsType].class;\r\n  }\r\n\r\n  /**\r\n   * Determine the positions of spinner, logo and text\r\n   */\r\n  private determinePositions(): void {\r\n    this.fgsPosition = <PositionType>this.validate('fgsPosition', this.fgsPosition, POSITION, this.defaultConfig.fgsPosition);\r\n    this.logoPosition = <PositionType>this.validate('logoPosition', this.logoPosition, POSITION, this.defaultConfig.logoPosition);\r\n    this.textPosition = <PositionType>this.validate('textPosition', this.textPosition, POSITION, this.defaultConfig.textPosition);\r\n    this.gap = coerceNumber(this.gap, this.defaultConfig.gap);\r\n\r\n    this.logoTop = 'initial';\r\n    this.spinnerTop = 'initial';\r\n    this.textTop = 'initial';\r\n    const textSize = 24;\r\n\r\n    if (this.logoPosition.startsWith('center')) {\r\n      this.logoTop = '50%';\r\n    } else if (this.logoPosition.startsWith('top')) {\r\n      this.logoTop = '30px';\r\n    }\r\n\r\n    if (this.fgsPosition.startsWith('center')) {\r\n      this.spinnerTop = '50%';\r\n    } else if (this.fgsPosition.startsWith('top')) {\r\n      this.spinnerTop = '30px';\r\n    }\r\n\r\n    if (this.textPosition.startsWith('center')) {\r\n      this.textTop = '50%';\r\n    } else if (this.textPosition.startsWith('top')) {\r\n      this.textTop = '30px';\r\n    }\r\n\r\n    if (this.fgsPosition === POSITION.centerCenter) {\r\n      if (this.logoUrl && this.logoPosition === POSITION.centerCenter) {\r\n        if (this.text && this.textPosition === POSITION.centerCenter) { // logo, spinner and text\r\n          this.logoTop = this.domSanitizer\r\n            .bypassSecurityTrustStyle(`calc(50% - ${this.fgsSize / 2}px - ${textSize / 2}px - ${this.gap}px)`);\r\n          this.spinnerTop = this.domSanitizer\r\n            .bypassSecurityTrustStyle(`calc(50% + ${this.logoSize / 2}px - ${textSize / 2}px)`);\r\n          this.textTop = this.domSanitizer\r\n            .bypassSecurityTrustStyle(`calc(50% + ${this.logoSize / 2}px + ${this.gap}px + ${this.fgsSize / 2}px)`);\r\n        } else { // logo and spinner\r\n          this.logoTop = this.domSanitizer\r\n            .bypassSecurityTrustStyle(`calc(50% - ${this.fgsSize / 2}px - ${this.gap / 2}px)`);\r\n          this.spinnerTop = this.domSanitizer\r\n            .bypassSecurityTrustStyle(`calc(50% + ${this.logoSize / 2}px + ${this.gap / 2}px)`);\r\n        }\r\n      } else {\r\n        if (this.text && this.textPosition === POSITION.centerCenter) { // spinner and text\r\n          this.spinnerTop = this.domSanitizer\r\n            .bypassSecurityTrustStyle(`calc(50% - ${textSize / 2}px - ${this.gap / 2}px)`);\r\n          this.textTop = this.domSanitizer\r\n            .bypassSecurityTrustStyle(`calc(50% + ${this.fgsSize / 2}px + ${this.gap / 2}px)`);\r\n        }\r\n      }\r\n    } else {\r\n      if (this.logoUrl && this.logoPosition === POSITION.centerCenter\r\n        && this.text && this.textPosition === POSITION.centerCenter) { // logo and text\r\n        this.logoTop = this.domSanitizer\r\n          .bypassSecurityTrustStyle(`calc(50% - ${textSize / 2}px - ${this.gap / 2}px)`);\r\n        this.textTop = this.domSanitizer\r\n          .bypassSecurityTrustStyle(`calc(50% + ${this.logoSize / 2}px + ${this.gap / 2}px)`);\r\n      }\r\n    }\r\n  }\r\n\r\n  private validate(inputName: string, value: string, validTypeObj: {}, fallbackValue: string): string {\r\n    if (Object.keys(validTypeObj).map(k => validTypeObj[k]).findIndex(v => v === value) === -1) {\r\n      console.error(`[ngx-ui-loader] - ${inputName} (\"${value}\") is invalid. `\r\n        + `Default value \"${fallbackValue}\" is used.`);\r\n      return fallbackValue;\r\n    }\r\n    return value;\r\n  }\r\n\r\n  /**\r\n   * On destroy event\r\n   */\r\n  ngOnDestroy() {\r\n    this.ngxService.destroyLoaderData(this.loaderId);\r\n    if (this.showForegroundWatcher) {\r\n      this.showForegroundWatcher.unsubscribe();\r\n    }\r\n    if (this.showBackgroundWatcher) {\r\n      this.showBackgroundWatcher.unsubscribe();\r\n    }\r\n    if (this.foregroundClosingWatcher) {\r\n      this.foregroundClosingWatcher.unsubscribe();\r\n    }\r\n    if (this.backgroundClosingWatcher) {\r\n      this.backgroundClosingWatcher.unsubscribe();\r\n    }\r\n  }\r\n}\r\n","import { Directive, ElementRef, Input, OnDestroy, Renderer2, OnInit } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { filter } from 'rxjs/operators';\r\n\r\nimport { NgxUiLoaderService } from './ngx-ui-loader.service';\r\nimport { coerceNumber } from './coercion';\r\nimport { ShowEvent } from './ngx-ui-loader.interfaces';\r\nimport { WAITING_FOR_OVERLAY_DISAPPEAR } from './ngx-ui-loader.contants';\r\n\r\n@Directive({ selector: '[ngxUiLoaderBlurred]' })\r\nexport class NgxUiLoaderBlurredDirective implements OnInit, OnDestroy {\r\n\r\n  private blurNumber: number;\r\n\r\n  @Input()\r\n  get blur(): number {\r\n    return this.blurNumber;\r\n  }\r\n\r\n  set blur(value: number) {\r\n    this.blurNumber = coerceNumber(value, this.ngxUiLoaderService.getDefaultConfig().blur);\r\n  }\r\n\r\n  @Input() loaderId: string;\r\n\r\n  showForegroundWatcher: Subscription;\r\n\r\n  constructor(\r\n    private elementRef: ElementRef,\r\n    private renderer: Renderer2,\r\n    private ngxUiLoaderService: NgxUiLoaderService\r\n  ) {\r\n    this.blurNumber = this.ngxUiLoaderService.getDefaultConfig().blur;\r\n    this.loaderId = this.ngxUiLoaderService.getDefaultConfig().masterLoaderId;\r\n  }\r\n\r\n  /**\r\n   * On Init event\r\n   */\r\n  ngOnInit() {\r\n    this.showForegroundWatcher = this.ngxUiLoaderService.showForeground$\r\n      .pipe(filter((showEvent: ShowEvent) => this.loaderId === showEvent.loaderId))\r\n      .subscribe(data => {\r\n        if (data.isShow) {\r\n          const filterValue = `blur(${this.blurNumber}px)`;\r\n          this.renderer.setStyle(this.elementRef.nativeElement, '-webkit-filter', filterValue);\r\n          this.renderer.setStyle(this.elementRef.nativeElement, 'filter', filterValue);\r\n        } else {\r\n          setTimeout(() => {\r\n            if (!this.ngxUiLoaderService.hasForeground(data.loaderId)) {\r\n              this.renderer.setStyle(this.elementRef.nativeElement, '-webkit-filter', 'none');\r\n              this.renderer.setStyle(this.elementRef.nativeElement, 'filter', 'none');\r\n            }\r\n          }, WAITING_FOR_OVERLAY_DISAPPEAR);\r\n        }\r\n      });\r\n  }\r\n\r\n  /**\r\n   * On destroy event\r\n   */\r\n  ngOnDestroy() {\r\n    if (this.showForegroundWatcher) {\r\n      this.showForegroundWatcher.unsubscribe();\r\n    }\r\n  }\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { NgxUiLoaderComponent } from './ngx-ui-loader.component';\r\nimport { NgxUiLoaderBlurredDirective } from './ngx-ui-loader-blurred.directive';\r\nimport { NGX_UI_LOADER_CONFIG_TOKEN } from './ngx-ui-loader-config.token';\r\nimport { NgxUiLoaderConfig } from './ngx-ui-loader-config';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n  ],\r\n  declarations: [\r\n    NgxUiLoaderComponent,\r\n    NgxUiLoaderBlurredDirective,\r\n  ],\r\n  exports: [\r\n    NgxUiLoaderComponent,\r\n    NgxUiLoaderBlurredDirective,\r\n  ]\r\n})\r\nexport class NgxUiLoaderModule {\r\n\r\n  /**\r\n   * forRoot\r\n   * @param ngxUiLoaderConfig\r\n   * @returns A module with its provider dependencies\r\n   */\r\n  static forRoot(ngxUiLoaderConfig: NgxUiLoaderConfig): ModuleWithProviders {\r\n    return {\r\n      ngModule: NgxUiLoaderModule,\r\n      providers: [\r\n        {\r\n          provide: NGX_UI_LOADER_CONFIG_TOKEN,\r\n          useValue: ngxUiLoaderConfig\r\n        }\r\n      ]\r\n    };\r\n  }\r\n}\r\n","import { InjectionToken } from '@angular/core';\r\nimport { NgxUiLoaderRouterConfig } from './ngx-ui-loader-router-config';\r\n\r\n/**\r\n * Injection token for ngx-ui-loader-router configuration\r\n */\r\nexport const NGX_UI_LOADER_ROUTER_CONFIG_TOKEN = new InjectionToken<NgxUiLoaderRouterConfig>('ngxUiLoaderRouterCustom.config');\r\n","/**\r\n * Router loader id\r\n */\r\nexport const ROUTER_LOADER_ID = '$_router_loader';\r\n","import { NgModule, ModuleWithProviders, Inject, Optional, SkipSelf } from '@angular/core';\r\nimport { NavigationCancel, NavigationEnd, NavigationError, NavigationStart, Router } from '@angular/router';\r\n\r\nimport { NgxUiLoaderService } from '../core/ngx-ui-loader.service';\r\nimport { NgxUiLoaderRouterConfig } from './ngx-ui-loader-router-config';\r\nimport { NGX_UI_LOADER_ROUTER_CONFIG_TOKEN } from './ngx-ui-loader-router-config.token';\r\nimport { ROUTER_LOADER_ID } from './ngx-ui-loader-router.constants';\r\n\r\n@NgModule({})\r\nexport class NgxUiLoaderRouterModule {\r\n\r\n  /**\r\n   * forRoot\r\n   * @param routerConfig Configuration\r\n   * @returns A module with its provider dependencies\r\n   */\r\n  static forRoot(routerConfig: NgxUiLoaderRouterConfig): ModuleWithProviders {\r\n    return {\r\n      ngModule: NgxUiLoaderRouterModule,\r\n      providers: [\r\n        {\r\n          provide: NGX_UI_LOADER_ROUTER_CONFIG_TOKEN,\r\n          useValue: routerConfig\r\n        }\r\n      ]\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Constructor\r\n   *\r\n   * @param parentModule\r\n   * @param config\r\n   * @param router\r\n   * @param ngxUiLoaderService\r\n   */\r\n  constructor(\r\n    @Optional() @SkipSelf() parentModule: NgxUiLoaderRouterModule,\r\n    @Optional() @Inject(NGX_UI_LOADER_ROUTER_CONFIG_TOKEN) config: NgxUiLoaderRouterConfig,\r\n    router: Router,\r\n    ngxUiLoaderService: NgxUiLoaderService) {\r\n\r\n    if (parentModule) {\r\n      throw new Error('[ngx-ui-loader] - NgxUiLoaderRouterModule is already loaded. It should be imported in the root `AppModule` only!');\r\n    }\r\n\r\n    let defaultConfig: NgxUiLoaderRouterConfig = {\r\n      loaderId: ngxUiLoaderService.getDefaultConfig().masterLoaderId,\r\n      showForeground: true\r\n    };\r\n\r\n    if (config) {\r\n      defaultConfig = { ...defaultConfig, ...config };\r\n    }\r\n\r\n    router.events\r\n      .subscribe(event => {\r\n        if (event instanceof NavigationStart) {\r\n          if (defaultConfig.showForeground) {\r\n            ngxUiLoaderService.startLoader(defaultConfig.loaderId, ROUTER_LOADER_ID);\r\n          } else {\r\n            ngxUiLoaderService.startBackgroundLoader(defaultConfig.loaderId, ROUTER_LOADER_ID);\r\n          }\r\n        }\r\n\r\n        if (event instanceof NavigationEnd || event instanceof NavigationCancel || event instanceof NavigationError) {\r\n          if (defaultConfig.showForeground) {\r\n            ngxUiLoaderService.stopLoader(defaultConfig.loaderId, ROUTER_LOADER_ID);\r\n          } else {\r\n            ngxUiLoaderService.stopBackgroundLoader(defaultConfig.loaderId, ROUTER_LOADER_ID);\r\n          }\r\n        }\r\n      });\r\n  }\r\n}\r\n","import { InjectionToken } from '@angular/core';\r\nimport { NgxUiLoaderHttpConfig } from './ngx-ui-loader-http-config';\r\n\r\n/**\r\n * Injection token for ngx-ui-loader-http configuration\r\n */\r\nexport const NGX_UI_LOADER_HTTP_CONFIG_TOKEN = new InjectionToken<NgxUiLoaderHttpConfig>('ngxUiLoaderHttpCustom.config');\r\n","/**\r\n * Http loader id\r\n */\r\nexport const HTTP_LOADER_ID = '$_http-loader';\r\n","import { Injectable, Inject, Optional } from '@angular/core';\r\nimport { HttpInterceptor, HttpEvent, HttpHandler, HttpRequest } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\nimport { NgxUiLoaderService } from '../core/ngx-ui-loader.service';\r\nimport { NGX_UI_LOADER_HTTP_CONFIG_TOKEN } from './ngx-ui-loader-http-config.token';\r\nimport { NgxUiLoaderHttpConfig } from './ngx-ui-loader-http-config';\r\nimport { HTTP_LOADER_ID } from './ngx-ui-loader-http.constants';\r\n\r\n@Injectable()\r\nexport class NgxUiLoaderHttpInterceptor implements HttpInterceptor {\r\n\r\n  private count: number;\r\n  private defaultConfig: NgxUiLoaderHttpConfig;\r\n  private exclude: string[];\r\n  private excludeRegexp: RegExp[];\r\n\r\n  /**\r\n   * Constructor\r\n   * @param config\r\n   * @param ngxUiLoaderService\r\n   */\r\n  constructor(@Optional() @Inject(NGX_UI_LOADER_HTTP_CONFIG_TOKEN) config: NgxUiLoaderHttpConfig,\r\n    private ngxUiLoaderService: NgxUiLoaderService) {\r\n\r\n    this.count = 0;\r\n    this.defaultConfig = {\r\n      loaderId: this.ngxUiLoaderService.getDefaultConfig().masterLoaderId,\r\n      showForeground: false\r\n    };\r\n\r\n    if (config) {\r\n      if (config.exclude) {\r\n        this.exclude = config.exclude.map(url => url.toLowerCase());\r\n      }\r\n      if (config.excludeRegexp) {\r\n        this.excludeRegexp = config.excludeRegexp.map(regexp => new RegExp(regexp, 'i'));\r\n      }\r\n      this.defaultConfig = { ...this.defaultConfig, ...config };\r\n    }\r\n  }\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    if (this.isIgnored(req.url)) {\r\n      return next.handle(req);\r\n    }\r\n\r\n    this.count++;\r\n    if (this.defaultConfig.showForeground) {\r\n      if (!this.ngxUiLoaderService.hasForeground(this.defaultConfig.loaderId, HTTP_LOADER_ID)) {\r\n        this.ngxUiLoaderService.startLoader(this.defaultConfig.loaderId, HTTP_LOADER_ID);\r\n      }\r\n    } else {\r\n      if (!this.ngxUiLoaderService.hasBackground(this.defaultConfig.loaderId, HTTP_LOADER_ID)) {\r\n        this.ngxUiLoaderService.startBackgroundLoader(this.defaultConfig.loaderId, HTTP_LOADER_ID);\r\n      }\r\n    }\r\n\r\n    return next.handle(req).pipe(finalize(() => {\r\n      this.count--;\r\n      if (this.count === 0) {\r\n        if (this.defaultConfig.showForeground) {\r\n          this.ngxUiLoaderService.stopLoader(this.defaultConfig.loaderId, HTTP_LOADER_ID);\r\n        } else {\r\n          this.ngxUiLoaderService.stopBackgroundLoader(this.defaultConfig.loaderId, HTTP_LOADER_ID);\r\n        }\r\n      }\r\n    }));\r\n  }\r\n\r\n  private isIgnored(url: string): boolean {\r\n    if (this.exclude) {\r\n      // do not show the loader for api urls in the `exclude` list\r\n      if (this.exclude.findIndex(str => url.toLowerCase().startsWith(str)) !== -1) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    if (this.excludeRegexp) {\r\n      // do not show the loader for api urls which matches regexps in the `excludeRegexp` list\r\n      if (this.excludeRegexp.findIndex(regexp => regexp.test(url)) !== -1) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n}\r\n","import { NgModule, ModuleWithProviders, Optional, SkipSelf } from '@angular/core';\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\n\r\nimport { NgxUiLoaderHttpInterceptor } from './ngx-ui-loader-http.interceptor';\r\nimport { NgxUiLoaderHttpConfig } from './ngx-ui-loader-http-config';\r\nimport { NGX_UI_LOADER_HTTP_CONFIG_TOKEN } from './ngx-ui-loader-http-config.token';\r\n\r\n@NgModule({\r\n  providers: [\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: NgxUiLoaderHttpInterceptor,\r\n      multi: true\r\n    }\r\n  ],\r\n})\r\nexport class NgxUiLoaderHttpModule {\r\n\r\n  /**\r\n   * Constructor\r\n   * @param parentModule optional\r\n   */\r\n  constructor(@Optional() @SkipSelf() parentModule: NgxUiLoaderHttpModule) {\r\n    if (parentModule) {\r\n      throw new Error('[ngx-ui-loader] - NgxUiLoaderHttpModule is already loaded. It should be imported in the root `AppModule` only!');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * forRoot\r\n   * @param httpConfig Configuration\r\n   * @returns A module with its provider dependencies\r\n   */\r\n  static forRoot(httpConfig: NgxUiLoaderHttpConfig): ModuleWithProviders {\r\n    return {\r\n      ngModule: NgxUiLoaderHttpModule,\r\n      providers: [\r\n        {\r\n          provide: NGX_UI_LOADER_HTTP_CONFIG_TOKEN,\r\n          useValue: httpConfig\r\n        }\r\n      ]\r\n    };\r\n  }\r\n}\r\n"]}